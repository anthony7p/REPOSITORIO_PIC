

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 15 17:28:39 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.35
    30                           ; Generated 05/05/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F45K50 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _ANSELAbits	set	3931
    65  0000                     _TRISAbits	set	3986
    66  0000                     _OSCCON	set	4051
    67  0000                     _INTCON2bits	set	4081
    68  0000                     _RCSTAbits	set	4011
    69  0000                     _TXSTAbits	set	4012
    70  0000                     _SPBRG1	set	4015
    71  0000                     _SPBRGH1	set	4016
    72  0000                     _TRISE	set	3990
    73  0000                     _TRISD	set	3989
    74  0000                     _TRISCbits	set	3988
    75  0000                     _TRISBbits	set	3987
    76  0000                     _PORTBbits	set	3969
    77  0000                     _ANSELE	set	3935
    78  0000                     _ANSELD	set	3934
    79  0000                     _ANSELCbits	set	3933
    80  0000                     _WPUBbits	set	3973
    81  0000                     _ANSELBbits	set	3932
    82  0000                     _LATD	set	3980
    83  0000                     _LATEbits	set	3981
    84  0000                     _TXREG1	set	4013
    85  0000                     _PORTD	set	3971
    86                           
    87                           	psect	smallconst
    88  000800                     __psmallconst:
    89                           	callstack 0
    90  000800  00                 	db	0
    91  000801                     STR_1:
    92  000801  4D                 	db	77	;'M'
    93  000802  49                 	db	73	;'I'
    94  000803  43                 	db	67	;'C'
    95  000804  52                 	db	82	;'R'
    96  000805  4F                 	db	79	;'O'
    97  000806  20                 	db	32
    98  000807  73                 	db	115	;'s'
    99  000808  65                 	db	101	;'e'
   100  000809  6D                 	db	109	;'m'
   101  00080A  61                 	db	97	;'a'
   102  00080B  6E                 	db	110	;'n'
   103  00080C  61                 	db	97	;'a'
   104  00080D  20                 	db	32
   105  00080E  31                 	db	49	;'1'
   106  00080F  33                 	db	51	;'3'
   107  000810  00                 	db	0
   108  000811                     STR_2:
   109  000811  72                 	db	114	;'r'
   110  000812  65                 	db	101	;'e'
   111  000813  6E                 	db	110	;'n'
   112  000814  64                 	db	100	;'d'
   113  000815  69                 	db	105	;'i'
   114  000816  72                 	db	114	;'r'
   115  000817  73                 	db	115	;'s'
   116  000818  65                 	db	101	;'e'
   117  000819  20                 	db	32
   118  00081A  6A                 	db	106	;'j'
   119  00081B  61                 	db	97	;'a'
   120  00081C  6D                 	db	109	;'m'
   121  00081D  61                 	db	97	;'a'
   122  00081E  73                 	db	115	;'s'
   123  00081F  00                 	db	0
   124  000820                     STR_3:
   125  000820  45                 	db	69	;'E'
   126  000821  6E                 	db	110	;'n'
   127  000822  76                 	db	118	;'v'
   128  000823  69                 	db	105	;'i'
   129  000824  61                 	db	97	;'a'
   130  000825  6E                 	db	110	;'n'
   131  000826  64                 	db	100	;'d'
   132  000827  6F                 	db	111	;'o'
   133  000828  20                 	db	32
   134  000829  68                 	db	104	;'h'
   135  00082A  6F                 	db	111	;'o'
   136  00082B  6C                 	db	108	;'l'
   137  00082C  61                 	db	97	;'a'
   138  00082D  00                 	db	0
   139  00082E  00                 	db	0	; dummy byte at the end
   140  0000                     
   141                           ; #config settings
   142                           
   143                           	psect	cinit
   144  000B9E                     __pcinit:
   145                           	callstack 0
   146  000B9E                     start_initialization:
   147                           	callstack 0
   148  000B9E                     __initialization:
   149                           	callstack 0
   150  000B9E                     end_of_initialization:
   151                           	callstack 0
   152  000B9E                     __end_of__initialization:
   153                           	callstack 0
   154  000B9E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   155  000BA0  6EF8               	movwf	tblptru,c
   156  000BA2  0E08               	movlw	high __Lsmallconst
   157  000BA4  6EF7               	movwf	tblptrh,c
   158  000BA6  0100               	movlb	0
   159  000BA8  EF51  F004         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	cstackCOMRAM
   162  000001                     __pcstackCOMRAM:
   163                           	callstack 0
   164  000001                     ?_strlen:
   165                           	callstack 0
   166  000001                     EUSART_Datasend@dato:
   167                           	callstack 0
   168  000001                     ENVIA_NIBBLE@dato:
   169                           	callstack 0
   170  000001                     LEER_LCD@aux:
   171                           	callstack 0
   172  000001                     strlen@s:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x0
   176  000001                     	ds	1
   177  000002                     ENVIA_CHAR@dato:
   178                           	callstack 0
   179  000002                     ENVIA_LCD_CMD@dato:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x1
   183  000002                     	ds	1
   184  000003                     ENVIA_CHAR@aux:
   185                           	callstack 0
   186  000003                     ENVIA_LCD_CMD@aux:
   187                           	callstack 0
   188  000003                     strlen@a:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192  000003                     	ds	1
   193  000004                     ??_LCD_CONFIG:
   194  000004                     POS_CURSOR@columna:
   195                           	callstack 0
   196  000004                     CURSOR_ONOFF@estado:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x3
   200  000004                     	ds	1
   201  000005                     ??_LCD_INIT:
   202  000005                     POS_CURSOR@fila:
   203                           	callstack 0
   204  000005                     ESCRIBE_MENSAJE2@cadena:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x4
   208  000005                     	ds	1
   209  000006                     
   210                           ; 1 bytes @ 0x5
   211  000006                     	ds	1
   212  000007                     ??_ESCRIBE_MENSAJE2:
   213                           
   214                           ; 1 bytes @ 0x6
   215  000007                     	ds	2
   216  000009                     ESCRIBE_MENSAJE2@tam:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x8
   220  000009                     	ds	1
   221  00000A                     ESCRIBE_MENSAJE2@i:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x9
   225  00000A                     	ds	1
   226  00000B                     ??_pantallazo_inicial:
   227                           
   228                           ; 1 bytes @ 0xA
   229  00000B                     	ds	2
   230  00000D                     ??_main:
   231                           
   232                           ; 1 bytes @ 0xC
   233  00000D                     	ds	2
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 62 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0       0       0
   256 ;;      Temps:          2       0       0       0       0       0       0       0       0
   257 ;;      Totals:         2       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        2 bytes
   259 ;; Hardware stack levels required when called: 5
   260 ;; This function calls:
   261 ;;		_BORRAR_LCD
   262 ;;		_ESCRIBE_MENSAJE2
   263 ;;		_EUSART_Datasend
   264 ;;		_POS_CURSOR
   265 ;;		_configuro
   266 ;;		_pantallazo_inicial
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273  0008A2                     __ptext0:
   274                           	callstack 0
   275  0008A2                     _main:
   276                           	callstack 26
   277  0008A2                     
   278                           ;main.c: 63:     configuro();
   279  0008A2  ECF6  F004         	call	_configuro	;wreg free
   280  0008A6                     
   281                           ;main.c: 64:     pantallazo_inicial();
   282  0008A6  ECD2  F004         	call	_pantallazo_inicial	;wreg free
   283  0008AA                     l1170:
   284                           
   285                           ;main.c: 66:         if(PORTBbits.RB0 == 0){
   286  0008AA  B081               	btfsc	129,0,c	;volatile
   287  0008AC  EF5A  F004         	goto	u201
   288  0008B0  EF5C  F004         	goto	u200
   289  0008B4                     u201:
   290  0008B4  EF55  F004         	goto	l1170
   291  0008B8                     u200:
   292  0008B8                     
   293                           ;main.c: 67:             POS_CURSOR(1,0);
   294  0008B8  0E00               	movlw	0
   295  0008BA  6E04               	movwf	POS_CURSOR@columna^0,c
   296  0008BC  0E01               	movlw	1
   297  0008BE  EC18  F005         	call	_POS_CURSOR
   298  0008C2                     
   299                           ;main.c: 68:             ESCRIBE_MENSAJE2("Enviando hola");
   300  0008C2  0E20               	movlw	low STR_3
   301  0008C4  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   302  0008C6  0E08               	movlw	high STR_3
   303  0008C8  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   304  0008CA  ECAD  F004         	call	_ESCRIBE_MENSAJE2	;wreg free
   305  0008CE                     
   306                           ;main.c: 69:             EUSART_Datasend('H');
   307  0008CE  0E48               	movlw	72
   308  0008D0  ECC4  F005         	call	_EUSART_Datasend
   309  0008D4                     
   310                           ;main.c: 70:             EUSART_Datasend('O');
   311  0008D4  0E4F               	movlw	79
   312  0008D6  ECC4  F005         	call	_EUSART_Datasend
   313  0008DA                     
   314                           ;main.c: 71:             EUSART_Datasend('L');
   315  0008DA  0E4C               	movlw	76
   316  0008DC  ECC4  F005         	call	_EUSART_Datasend
   317  0008E0                     
   318                           ;main.c: 72:             EUSART_Datasend('A');
   319  0008E0  0E41               	movlw	65
   320  0008E2  ECC4  F005         	call	_EUSART_Datasend
   321  0008E6                     
   322                           ;main.c: 73:             _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   323  0008E6  0E06               	movlw	6
   324  0008E8  6E0E               	movwf	(??_main+1)^0,c
   325  0008EA  0E13               	movlw	19
   326  0008EC  6E0D               	movwf	??_main^0,c
   327  0008EE  0EAE               	movlw	174
   328  0008F0                     u217:
   329  0008F0  2EE8               	decfsz	wreg,f,c
   330  0008F2  D7FE               	bra	u217
   331  0008F4  2E0D               	decfsz	??_main^0,f,c
   332  0008F6  D7FC               	bra	u217
   333  0008F8  2E0E               	decfsz	(??_main+1)^0,f,c
   334  0008FA  D7FA               	bra	u217
   335  0008FC                     
   336                           ;main.c: 74:             BORRAR_LCD();
   337  0008FC  ECDA  F005         	call	_BORRAR_LCD	;wreg free
   338  000900  EF55  F004         	goto	l1170
   339  000904  EF00  F000         	goto	start
   340  000908                     __end_of_main:
   341                           	callstack 0
   342                           
   343 ;; *************** function _pantallazo_inicial *****************
   344 ;; Defined at:
   345 ;;		line 49 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         0       0       0       0       0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0
   361 ;;      Temps:          2       0       0       0       0       0       0       0       0
   362 ;;      Totals:         2       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels used: 1
   365 ;; Hardware stack levels required when called: 3
   366 ;; This function calls:
   367 ;;		_BORRAR_LCD
   368 ;;		_ESCRIBE_MENSAJE2
   369 ;;		_POS_CURSOR
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376  0009A4                     __ptext1:
   377                           	callstack 0
   378  0009A4                     _pantallazo_inicial:
   379                           	callstack 27
   380  0009A4                     
   381                           ;main.c: 50:     POS_CURSOR(1,0);
   382  0009A4  0E00               	movlw	0
   383  0009A6  6E04               	movwf	POS_CURSOR@columna^0,c
   384  0009A8  0E01               	movlw	1
   385  0009AA  EC18  F005         	call	_POS_CURSOR
   386  0009AE                     
   387                           ;main.c: 51:     ESCRIBE_MENSAJE2("MICRO semana 13");
   388  0009AE  0E01               	movlw	low STR_1
   389  0009B0  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   390  0009B2  0E08               	movlw	high STR_1
   391  0009B4  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   392  0009B6  ECAD  F004         	call	_ESCRIBE_MENSAJE2	;wreg free
   393  0009BA                     
   394                           ;main.c: 52:     POS_CURSOR(2,0);
   395  0009BA  0E00               	movlw	0
   396  0009BC  6E04               	movwf	POS_CURSOR@columna^0,c
   397  0009BE  0E02               	movlw	2
   398  0009C0  EC18  F005         	call	_POS_CURSOR
   399                           
   400                           ;main.c: 53:     ESCRIBE_MENSAJE2("rendirse jamas");
   401  0009C4  0E11               	movlw	low STR_2
   402  0009C6  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   403  0009C8  0E08               	movlw	high STR_2
   404  0009CA  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   405  0009CC  ECAD  F004         	call	_ESCRIBE_MENSAJE2	;wreg free
   406  0009D0                     
   407                           ;main.c: 54:     _delay((unsigned long)((3000)*(4000000UL/4000.0)));
   408  0009D0  0E10               	movlw	16
   409  0009D2  6E0C               	movwf	(??_pantallazo_inicial+1)^0,c
   410  0009D4  0E39               	movlw	57
   411  0009D6  6E0B               	movwf	??_pantallazo_inicial^0,c
   412  0009D8  0E0E               	movlw	14
   413  0009DA                     u227:
   414  0009DA  2EE8               	decfsz	wreg,f,c
   415  0009DC  D7FE               	bra	u227
   416  0009DE  2E0B               	decfsz	??_pantallazo_inicial^0,f,c
   417  0009E0  D7FC               	bra	u227
   418  0009E2  2E0C               	decfsz	(??_pantallazo_inicial+1)^0,f,c
   419  0009E4  D7FA               	bra	u227
   420  0009E6                     
   421                           ;main.c: 55:     BORRAR_LCD();
   422  0009E6  ECDA  F005         	call	_BORRAR_LCD	;wreg free
   423  0009EA  0012               	return		;funcret
   424  0009EC                     __end_of_pantallazo_inicial:
   425                           	callstack 0
   426                           
   427 ;; *************** function _POS_CURSOR *****************
   428 ;; Defined at:
   429 ;;		line 5 in file "LCD.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  fila            1    wreg     unsigned char 
   432 ;;  columna         1    3[COMRAM] unsigned char 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  fila            1    4[COMRAM] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         1       0       0       0       0       0       0       0       0
   445 ;;      Locals:         1       0       0       0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0
   447 ;;      Totals:         2       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 2
   451 ;; This function calls:
   452 ;;		_ENVIA_LCD_CMD
   453 ;; This function is called by:
   454 ;;		_pantallazo_inicial
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text2
   460  000A30                     __ptext2:
   461                           	callstack 0
   462  000A30                     _POS_CURSOR:
   463                           	callstack 27
   464                           
   465                           ;incstack = 0
   466                           ;POS_CURSOR@fila stored from wreg
   467  000A30  6E05               	movwf	POS_CURSOR@fila^0,c
   468  000A32                     
   469                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   470  000A32  0405               	decf	POS_CURSOR@fila^0,w,c
   471  000A34  A4D8               	btfss	status,2,c
   472  000A36  EF1F  F005         	goto	u171
   473  000A3A  EF21  F005         	goto	u170
   474  000A3E                     u171:
   475  000A3E  EF27  F005         	goto	l1140
   476  000A42                     u170:
   477  000A42                     
   478                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   479  000A42  5004               	movf	POS_CURSOR@columna^0,w,c
   480  000A44  0F80               	addlw	128
   481  000A46  EC6C  F005         	call	_ENVIA_LCD_CMD
   482                           
   483                           ;LCD.c: 10:  }
   484  000A4A  EF34  F005         	goto	l95
   485  000A4E                     l1140:
   486  000A4E  0E02               	movlw	2
   487  000A50  1805               	xorwf	POS_CURSOR@fila^0,w,c
   488  000A52  A4D8               	btfss	status,2,c
   489  000A54  EF2E  F005         	goto	u181
   490  000A58  EF30  F005         	goto	u180
   491  000A5C                     u181:
   492  000A5C  EF34  F005         	goto	l95
   493  000A60                     u180:
   494  000A60                     
   495                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   496  000A60  5004               	movf	POS_CURSOR@columna^0,w,c
   497  000A62  0FC0               	addlw	192
   498  000A64  EC6C  F005         	call	_ENVIA_LCD_CMD
   499  000A68                     l95:
   500  000A68  0012               	return		;funcret
   501  000A6A                     __end_of_POS_CURSOR:
   502                           	callstack 0
   503                           
   504 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   505 ;; Defined at:
   506 ;;		line 69 in file "LCD.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   509 ;;		 -> STR_3(14), STR_2(15), STR_1(16), 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  i               1    9[COMRAM] unsigned char 
   512 ;;  tam             1    8[COMRAM] unsigned char 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   522 ;;      Params:         2       0       0       0       0       0       0       0       0
   523 ;;      Locals:         2       0       0       0       0       0       0       0       0
   524 ;;      Temps:          2       0       0       0       0       0       0       0       0
   525 ;;      Totals:         6       0       0       0       0       0       0       0       0
   526 ;;Total ram usage:        6 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 2
   529 ;; This function calls:
   530 ;;		_ENVIA_CHAR
   531 ;;		_strlen
   532 ;; This function is called by:
   533 ;;		_pantallazo_inicial
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text3
   539  00095A                     __ptext3:
   540                           	callstack 0
   541  00095A                     _ESCRIBE_MENSAJE2:
   542                           	callstack 27
   543  00095A                     
   544                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   545  00095A  C005  F001         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   546  00095E  C006  F002         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   547  000962  EC35  F005         	call	_strlen	;wreg free
   548  000966  5001               	movf	?_strlen^0,w,c
   549  000968  6E09               	movwf	ESCRIBE_MENSAJE2@tam^0,c
   550  00096A                     
   551                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   552  00096A  0E00               	movlw	0
   553  00096C  6E0A               	movwf	ESCRIBE_MENSAJE2@i^0,c
   554  00096E  EFC8  F004         	goto	l1154
   555  000972                     l1150:
   556                           
   557                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   558  000972  500A               	movf	ESCRIBE_MENSAJE2@i^0,w,c
   559  000974  2405               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
   560  000976  6E07               	movwf	??_ESCRIBE_MENSAJE2^0,c
   561  000978  0E00               	movlw	0
   562  00097A  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
   563  00097C  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
   564  00097E  C007  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   565  000982  C008  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   566  000986                     	if	0	;tblptru may be non-zero
   567  000986                     	endif
   568  000986                     	if	0	;tblptru may be non-zero
   569  000986                     	endif
   570  000986  0008               	tblrd		*
   571  000988  50F5               	movf	tablat,w,c
   572  00098A  EC52  F005         	call	_ENVIA_CHAR
   573  00098E                     
   574                           ;LCD.c: 77:  }
   575  00098E  2A0A               	incf	ESCRIBE_MENSAJE2@i^0,f,c
   576  000990                     l1154:
   577  000990  5009               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
   578  000992  5C0A               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
   579  000994  A0D8               	btfss	status,0,c
   580  000996  EFCF  F004         	goto	u191
   581  00099A  EFD1  F004         	goto	u190
   582  00099E                     u191:
   583  00099E  EFB9  F004         	goto	l1150
   584  0009A2                     u190:
   585  0009A2  0012               	return		;funcret
   586  0009A4                     __end_of_ESCRIBE_MENSAJE2:
   587                           	callstack 0
   588                           
   589 ;; *************** function _strlen *****************
   590 ;; Defined at:
   591 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  s               2    0[COMRAM] PTR const unsigned char 
   594 ;;		 -> STR_3(14), STR_2(15), STR_1(16), 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  a               2    2[COMRAM] PTR const unsigned char 
   597 ;;		 -> STR_3(14), STR_2(15), STR_1(16), 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2    0[COMRAM] unsigned int 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         2       0       0       0       0       0       0       0       0
   608 ;;      Locals:         2       0       0       0       0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0
   610 ;;      Totals:         4       0       0       0       0       0       0       0       0
   611 ;;Total ram usage:        4 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_ESCRIBE_MENSAJE2
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text4
   621  000A6A                     __ptext4:
   622                           	callstack 0
   623  000A6A                     _strlen:
   624                           	callstack 28
   625  000A6A  C001  F003         	movff	strlen@s,strlen@a
   626  000A6E  C002  F004         	movff	strlen@s+1,strlen@a+1
   627  000A72  EF3D  F005         	goto	l1130
   628  000A76                     l1128:
   629  000A76  4A01               	infsnz	strlen@s^0,f,c
   630  000A78  2A02               	incf	(strlen@s+1)^0,f,c
   631  000A7A                     l1130:
   632  000A7A  C001  FFF6         	movff	strlen@s,tblptrl
   633  000A7E  C002  FFF7         	movff	strlen@s+1,tblptrh
   634  000A82                     	if	0	;tblptru may be non-zero
   635  000A82                     	endif
   636  000A82                     	if	0	;tblptru may be non-zero
   637  000A82                     	endif
   638  000A82  0008               	tblrd		*
   639  000A84  50F5               	movf	tablat,w,c
   640  000A86  0900               	iorlw	0
   641  000A88  A4D8               	btfss	status,2,c
   642  000A8A  EF49  F005         	goto	u161
   643  000A8E  EF4B  F005         	goto	u160
   644  000A92                     u161:
   645  000A92  EF3B  F005         	goto	l1128
   646  000A96                     u160:
   647  000A96  5003               	movf	strlen@a^0,w,c
   648  000A98  5C01               	subwf	strlen@s^0,w,c
   649  000A9A  6E01               	movwf	?_strlen^0,c
   650  000A9C  5004               	movf	(strlen@a+1)^0,w,c
   651  000A9E  5802               	subwfb	(strlen@s+1)^0,w,c
   652  000AA0  6E02               	movwf	(?_strlen+1)^0,c
   653  000AA2  0012               	return		;funcret
   654  000AA4                     __end_of_strlen:
   655                           	callstack 0
   656                           
   657 ;; *************** function _ENVIA_CHAR *****************
   658 ;; Defined at:
   659 ;;		line 80 in file "LCD.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  dato            1    wreg     unsigned char 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  dato            1    1[COMRAM] unsigned char 
   664 ;;  aux             1    2[COMRAM] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         2       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         2       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        2 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 1
   681 ;; This function calls:
   682 ;;		_ENVIA_NIBBLE
   683 ;;		_LEER_LCD
   684 ;; This function is called by:
   685 ;;		_ESCRIBE_MENSAJE2
   686 ;;		_ESCRIBE_MENSAJE
   687 ;;		_GENERACARACTER
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text5
   692  000AA4                     __ptext5:
   693                           	callstack 0
   694  000AA4                     _ENVIA_CHAR:
   695                           	callstack 27
   696                           
   697                           ;incstack = 0
   698                           ;ENVIA_CHAR@dato stored from wreg
   699  000AA4  6E02               	movwf	ENVIA_CHAR@dato^0,c
   700  000AA6                     
   701                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
   702  000AA6  808D               	bsf	141,0,c	;volatile
   703  000AA8                     
   704                           ;LCD.c: 84:  LEER_LCD();
   705  000AA8  EC18  F004         	call	_LEER_LCD	;wreg free
   706  000AAC                     
   707                           ;LCD.c: 85:  TRISD = 0x00;
   708  000AAC  0E00               	movlw	0
   709  000AAE  6E95               	movwf	149,c	;volatile
   710  000AB0                     
   711                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   712  000AB0  0E21               	movlw	33
   713  000AB2                     u237:
   714  000AB2  2EE8               	decfsz	wreg,f,c
   715  000AB4  D7FE               	bra	u237
   716  000AB6  F000               	nop	
   717  000AB8                     
   718                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
   719  000AB8  928D               	bcf	141,1,c	;volatile
   720  000ABA                     
   721                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
   722  000ABA  948D               	bcf	141,2,c	;volatile
   723  000ABC                     
   724                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
   725  000ABC  808D               	bsf	141,0,c	;volatile
   726  000ABE                     
   727                           ;LCD.c: 90:  aux = dato & 0xF0;
   728  000ABE  5002               	movf	ENVIA_CHAR@dato^0,w,c
   729  000AC0  0BF0               	andlw	240
   730  000AC2  6E03               	movwf	ENVIA_CHAR@aux^0,c
   731  000AC4                     
   732                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
   733  000AC4  5003               	movf	ENVIA_CHAR@aux^0,w,c
   734  000AC6  ECB6  F005         	call	_ENVIA_NIBBLE
   735  000ACA                     
   736                           ;LCD.c: 92:  aux = dato << 4;
   737  000ACA  3802               	swapf	ENVIA_CHAR@dato^0,w,c
   738  000ACC  0BF0               	andlw	240
   739  000ACE  6E03               	movwf	ENVIA_CHAR@aux^0,c
   740  000AD0                     
   741                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
   742  000AD0  5003               	movf	ENVIA_CHAR@aux^0,w,c
   743  000AD2  ECB6  F005         	call	_ENVIA_NIBBLE
   744  000AD6  0012               	return		;funcret
   745  000AD8                     __end_of_ENVIA_CHAR:
   746                           	callstack 0
   747                           
   748 ;; *************** function _configuro *****************
   749 ;; Defined at:
   750 ;;		line 14 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 4
   771 ;; This function calls:
   772 ;;		_LCD_INIT
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text6
   779  0009EC                     __ptext6:
   780                           	callstack 0
   781  0009EC                     _configuro:
   782                           	callstack 26
   783  0009EC                     
   784                           ;main.c: 15:     OSCCON = 0X52;
   785  0009EC  0E52               	movlw	82
   786  0009EE  6ED3               	movwf	211,c	;volatile
   787  0009F0                     
   788                           ;main.c: 16:     TRISAbits.TRISA0 = 0;
   789  0009F0  9092               	bcf	146,0,c	;volatile
   790  0009F2                     
   791                           ;main.c: 17:     ANSELAbits.ANSA0 = 1;
   792  0009F2  010F               	movlb	15	; () banked
   793  0009F4  815B               	bsf	91,0,b	;volatile
   794  0009F6                     
   795                           ; BSR set to: 15
   796                           ;main.c: 19:     TRISBbits.RB0 = 1;
   797  0009F6  8093               	bsf	147,0,c	;volatile
   798  0009F8                     
   799                           ; BSR set to: 15
   800                           ;main.c: 20:     ANSELBbits.ANSB0 = 0;
   801  0009F8  915C               	bcf	92,0,b	;volatile
   802  0009FA                     
   803                           ; BSR set to: 15
   804                           ;main.c: 21:     TRISBbits.RB1 = 1;
   805  0009FA  8293               	bsf	147,1,c	;volatile
   806  0009FC                     
   807                           ; BSR set to: 15
   808                           ;main.c: 22:     ANSELBbits.ANSB1 = 0;
   809  0009FC  935C               	bcf	92,1,b	;volatile
   810  0009FE                     
   811                           ; BSR set to: 15
   812                           ;main.c: 23:     INTCON2bits.RBPU = 0;
   813  0009FE  9EF1               	bcf	241,7,c	;volatile
   814  000A00                     
   815                           ; BSR set to: 15
   816                           ;main.c: 24:     WPUBbits.WPUB0 = 1;
   817  000A00  8085               	bsf	133,0,c	;volatile
   818  000A02                     
   819                           ; BSR set to: 15
   820                           ;main.c: 25:     WPUBbits.WPUB1 = 1;
   821  000A02  8285               	bsf	133,1,c	;volatile
   822  000A04                     
   823                           ; BSR set to: 15
   824                           ;main.c: 28:     TRISCbits.TRISC6 = 0;
   825  000A04  9C94               	bcf	148,6,c	;volatile
   826  000A06                     
   827                           ; BSR set to: 15
   828                           ;main.c: 29:     ANSELCbits.ANSC6 = 0;
   829  000A06  9D5D               	bcf	93,6,b	;volatile
   830  000A08                     
   831                           ; BSR set to: 15
   832                           ;main.c: 30:     TRISCbits.TRISC7 = 1;
   833  000A08  8E94               	bsf	148,7,c	;volatile
   834  000A0A                     
   835                           ; BSR set to: 15
   836                           ;main.c: 31:     ANSELCbits.ANSC7 = 0;
   837  000A0A  9F5D               	bcf	93,7,b	;volatile
   838                           
   839                           ;main.c: 33:     TRISD = 0X0F;
   840  000A0C  0E0F               	movlw	15
   841  000A0E  6E95               	movwf	149,c	;volatile
   842                           
   843                           ;main.c: 34:     ANSELD = 0X0F;
   844  000A10  0E0F               	movlw	15
   845  000A12  6F5E               	movwf	94,b	;volatile
   846                           
   847                           ;main.c: 36:     TRISE = 0XF8;
   848  000A14  0EF8               	movlw	248
   849  000A16  6E96               	movwf	150,c	;volatile
   850                           
   851                           ;main.c: 37:     ANSELE = 0XF8;
   852  000A18  0EF8               	movlw	248
   853  000A1A  6F5F               	movwf	95,b	;volatile
   854                           
   855                           ;main.c: 39:     SPBRGH1 = 0;
   856  000A1C  0E00               	movlw	0
   857  000A1E  6EB0               	movwf	176,c	;volatile
   858                           
   859                           ;main.c: 40:     SPBRG1 = 25;
   860  000A20  0E19               	movlw	25
   861  000A22  6EAF               	movwf	175,c	;volatile
   862  000A24                     
   863                           ; BSR set to: 15
   864                           ;main.c: 41:     TXSTAbits.BRGH = 1;
   865  000A24  84AC               	bsf	172,2,c	;volatile
   866  000A26                     
   867                           ; BSR set to: 15
   868                           ;main.c: 42:     RCSTAbits.SPEN = 1;
   869  000A26  8EAB               	bsf	171,7,c	;volatile
   870  000A28                     
   871                           ; BSR set to: 15
   872                           ;main.c: 43:     TXSTAbits.TXEN = 1;
   873  000A28  8AAC               	bsf	172,5,c	;volatile
   874  000A2A                     
   875                           ; BSR set to: 15
   876                           ;main.c: 46:     LCD_INIT();
   877  000A2A  EC86  F005         	call	_LCD_INIT	;wreg free
   878  000A2E  0012               	return		;funcret
   879  000A30                     __end_of_configuro:
   880                           	callstack 0
   881                           
   882 ;; *************** function _LCD_INIT *****************
   883 ;; Defined at:
   884 ;;		line 184 in file "LCD.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   898 ;;      Params:         0       0       0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0       0       0
   900 ;;      Temps:          1       0       0       0       0       0       0       0       0
   901 ;;      Totals:         1       0       0       0       0       0       0       0       0
   902 ;;Total ram usage:        1 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 3
   905 ;; This function calls:
   906 ;;		_BORRAR_LCD
   907 ;;		_CURSOR_HOME
   908 ;;		_CURSOR_ONOFF
   909 ;;		_LCD_CONFIG
   910 ;; This function is called by:
   911 ;;		_configuro
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text7
   916  000B0C                     __ptext7:
   917                           	callstack 0
   918  000B0C                     _LCD_INIT:
   919                           	callstack 26
   920  000B0C                     
   921                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   922  000B0C  0E14               	movlw	20
   923  000B0E  6E05               	movwf	??_LCD_INIT^0,c
   924  000B10  0E7A               	movlw	122
   925  000B12                     u247:
   926  000B12  2EE8               	decfsz	wreg,f,c
   927  000B14  D7FE               	bra	u247
   928  000B16  2E05               	decfsz	??_LCD_INIT^0,f,c
   929  000B18  D7FC               	bra	u247
   930  000B1A                     
   931                           ;LCD.c: 186:     LCD_CONFIG();
   932  000B1A  EC84  F004         	call	_LCD_CONFIG	;wreg free
   933  000B1E                     
   934                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   935  000B1E  0E14               	movlw	20
   936  000B20  6E05               	movwf	??_LCD_INIT^0,c
   937  000B22  0E7A               	movlw	122
   938  000B24                     u257:
   939  000B24  2EE8               	decfsz	wreg,f,c
   940  000B26  D7FE               	bra	u257
   941  000B28  2E05               	decfsz	??_LCD_INIT^0,f,c
   942  000B2A  D7FC               	bra	u257
   943                           
   944                           ;LCD.c: 188:     BORRAR_LCD();
   945  000B2C  ECDA  F005         	call	_BORRAR_LCD	;wreg free
   946                           
   947                           ;LCD.c: 189:     CURSOR_HOME();
   948  000B30  ECD6  F005         	call	_CURSOR_HOME	;wreg free
   949                           
   950                           ;LCD.c: 190:     CURSOR_ONOFF(1);
   951  000B34  0E01               	movlw	1
   952  000B36  EC9E  F005         	call	_CURSOR_ONOFF
   953  000B3A  0012               	return		;funcret
   954  000B3C                     __end_of_LCD_INIT:
   955                           	callstack 0
   956                           
   957 ;; *************** function _LCD_CONFIG *****************
   958 ;; Defined at:
   959 ;;		line 101 in file "LCD.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0
   975 ;;      Temps:          1       0       0       0       0       0       0       0       0
   976 ;;      Totals:         1       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        1 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 2
   980 ;; This function calls:
   981 ;;		_ENVIA_LCD_CMD
   982 ;;		_ENVIA_NIBBLE
   983 ;; This function is called by:
   984 ;;		_LCD_INIT
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text8
   989  000908                     __ptext8:
   990                           	callstack 0
   991  000908                     _LCD_CONFIG:
   992                           	callstack 26
   993  000908                     
   994                           ;LCD.c: 103:  LATEbits.LATE0 = 0;
   995  000908  908D               	bcf	141,0,c	;volatile
   996                           
   997                           ;LCD.c: 104:  LATEbits.LATE1 = 0;
   998  00090A  928D               	bcf	141,1,c	;volatile
   999  00090C                     
  1000                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1001  00090C  0E30               	movlw	48
  1002  00090E  ECB6  F005         	call	_ENVIA_NIBBLE
  1003  000912                     
  1004                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1005  000912  0E03               	movlw	3
  1006  000914  6E04               	movwf	??_LCD_CONFIG^0,c
  1007  000916  0E98               	movlw	152
  1008  000918                     u267:
  1009  000918  2EE8               	decfsz	wreg,f,c
  1010  00091A  D7FE               	bra	u267
  1011  00091C  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1012  00091E  D7FC               	bra	u267
  1013  000920                     
  1014                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1015  000920  0E30               	movlw	48
  1016  000922  ECB6  F005         	call	_ENVIA_NIBBLE
  1017                           
  1018                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1019  000926  0E21               	movlw	33
  1020  000928                     u277:
  1021  000928  2EE8               	decfsz	wreg,f,c
  1022  00092A  D7FE               	bra	u277
  1023  00092C  F000               	nop	
  1024  00092E                     
  1025                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1026  00092E  0E30               	movlw	48
  1027  000930  ECB6  F005         	call	_ENVIA_NIBBLE
  1028  000934                     
  1029                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1030  000934  0E20               	movlw	32
  1031  000936  ECB6  F005         	call	_ENVIA_NIBBLE
  1032  00093A                     
  1033                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1034  00093A  0E01               	movlw	1
  1035  00093C  EC6C  F005         	call	_ENVIA_LCD_CMD
  1036  000940                     
  1037                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1038  000940  0E28               	movlw	40
  1039  000942  EC6C  F005         	call	_ENVIA_LCD_CMD
  1040  000946                     
  1041                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1042  000946  0E0F               	movlw	15
  1043  000948  EC6C  F005         	call	_ENVIA_LCD_CMD
  1044  00094C                     
  1045                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1046  00094C  0E06               	movlw	6
  1047  00094E  EC6C  F005         	call	_ENVIA_LCD_CMD
  1048  000952                     
  1049                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1050  000952  0E01               	movlw	1
  1051  000954  EC6C  F005         	call	_ENVIA_LCD_CMD
  1052  000958  0012               	return		;funcret
  1053  00095A                     __end_of_LCD_CONFIG:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _CURSOR_ONOFF *****************
  1057 ;; Defined at:
  1058 ;;		line 54 in file "LCD.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  estado          1    wreg     unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  estado          1    3[COMRAM] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        1 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 2
  1079 ;; This function calls:
  1080 ;;		_ENVIA_LCD_CMD
  1081 ;; This function is called by:
  1082 ;;		_LCD_INIT
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text9
  1087  000B3C                     __ptext9:
  1088                           	callstack 0
  1089  000B3C                     _CURSOR_ONOFF:
  1090                           	callstack 26
  1091                           
  1092                           ;incstack = 0
  1093                           ;CURSOR_ONOFF@estado stored from wreg
  1094  000B3C  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1095  000B3E                     
  1096                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1097  000B3E  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1098  000B40  A4D8               	btfss	status,2,c
  1099  000B42  EFA5  F005         	goto	u21
  1100  000B46  EFA7  F005         	goto	u20
  1101  000B4A                     u21:
  1102  000B4A  EFAA  F005         	goto	l924
  1103  000B4E                     u20:
  1104  000B4E  0E0E               	movlw	14
  1105  000B50  EC6C  F005         	call	_ENVIA_LCD_CMD
  1106  000B54                     l924:
  1107                           
  1108                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1109  000B54  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1110  000B56  A4D8               	btfss	status,2,c
  1111  000B58  EFB0  F005         	goto	u31
  1112  000B5C  EFB2  F005         	goto	u30
  1113  000B60                     u31:
  1114  000B60  EFB5  F005         	goto	l125
  1115  000B64                     u30:
  1116  000B64  0E0C               	movlw	12
  1117  000B66  EC6C  F005         	call	_ENVIA_LCD_CMD
  1118  000B6A                     l125:
  1119  000B6A  0012               	return		;funcret
  1120  000B6C                     __end_of_CURSOR_ONOFF:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _CURSOR_HOME *****************
  1124 ;; Defined at:
  1125 ;;		line 29 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 2
  1146 ;; This function calls:
  1147 ;;		_ENVIA_LCD_CMD
  1148 ;; This function is called by:
  1149 ;;		_LCD_INIT
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text10
  1154  000BAC                     __ptext10:
  1155                           	callstack 0
  1156  000BAC                     _CURSOR_HOME:
  1157                           	callstack 26
  1158  000BAC                     
  1159                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1160  000BAC  0E02               	movlw	2
  1161  000BAE  EC6C  F005         	call	_ENVIA_LCD_CMD
  1162  000BB2  0012               	return		;funcret
  1163  000BB4                     __end_of_CURSOR_HOME:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _BORRAR_LCD *****************
  1167 ;; Defined at:
  1168 ;;		line 96 in file "LCD.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 2
  1189 ;; This function calls:
  1190 ;;		_ENVIA_LCD_CMD
  1191 ;; This function is called by:
  1192 ;;		_pantallazo_inicial
  1193 ;;		_main
  1194 ;;		_LCD_INIT
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text11
  1199  000BB4                     __ptext11:
  1200                           	callstack 0
  1201  000BB4                     _BORRAR_LCD:
  1202                           	callstack 27
  1203  000BB4                     
  1204                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1205  000BB4  0E01               	movlw	1
  1206  000BB6  EC6C  F005         	call	_ENVIA_LCD_CMD
  1207  000BBA  0012               	return		;funcret
  1208  000BBC                     __end_of_BORRAR_LCD:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _ENVIA_LCD_CMD *****************
  1212 ;; Defined at:
  1213 ;;		line 128 in file "LCD.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  dato            1    wreg     unsigned char 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  dato            1    1[COMRAM] unsigned char 
  1218 ;;  aux             1    2[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 1
  1235 ;; This function calls:
  1236 ;;		_ENVIA_NIBBLE
  1237 ;;		_LEER_LCD
  1238 ;; This function is called by:
  1239 ;;		_POS_CURSOR
  1240 ;;		_CURSOR_HOME
  1241 ;;		_CURSOR_ONOFF
  1242 ;;		_BORRAR_LCD
  1243 ;;		_LCD_CONFIG
  1244 ;;		_BLINK_CURSOR
  1245 ;;		_DISPLAY_ONOFF
  1246 ;;		_CURSOR_SHIFTLEFT
  1247 ;;		_CURSOR_SHIFTRIGHT
  1248 ;;		_DISPLAY_SHIFTLEFT
  1249 ;;		_DISPLAY_SHIFTRIGHT
  1250 ;;		_GENERACARACTER
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text12
  1255  000AD8                     __ptext12:
  1256                           	callstack 0
  1257  000AD8                     _ENVIA_LCD_CMD:
  1258                           	callstack 27
  1259                           
  1260                           ;incstack = 0
  1261                           ;ENVIA_LCD_CMD@dato stored from wreg
  1262  000AD8  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1263  000ADA                     
  1264                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  1265  000ADA  908D               	bcf	141,0,c	;volatile
  1266  000ADC                     
  1267                           ;LCD.c: 132:  LEER_LCD();
  1268  000ADC  EC18  F004         	call	_LEER_LCD	;wreg free
  1269  000AE0                     
  1270                           ;LCD.c: 133:  TRISD = 0b00000000;
  1271  000AE0  0E00               	movlw	0
  1272  000AE2  6E95               	movwf	149,c	;volatile
  1273  000AE4                     
  1274                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1275  000AE4  0E21               	movlw	33
  1276  000AE6                     u287:
  1277  000AE6  2EE8               	decfsz	wreg,f,c
  1278  000AE8  D7FE               	bra	u287
  1279  000AEA  F000               	nop	
  1280  000AEC                     
  1281                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  1282  000AEC  928D               	bcf	141,1,c	;volatile
  1283  000AEE                     
  1284                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  1285  000AEE  948D               	bcf	141,2,c	;volatile
  1286  000AF0                     
  1287                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  1288  000AF0  908D               	bcf	141,0,c	;volatile
  1289  000AF2                     
  1290                           ;LCD.c: 138:  aux = dato & 0xF0;
  1291  000AF2  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1292  000AF4  0BF0               	andlw	240
  1293  000AF6  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1294  000AF8                     
  1295                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1296  000AF8  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1297  000AFA  ECB6  F005         	call	_ENVIA_NIBBLE
  1298  000AFE                     
  1299                           ;LCD.c: 140:  aux = dato<<4;
  1300  000AFE  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1301  000B00  0BF0               	andlw	240
  1302  000B02  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1303  000B04                     
  1304                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1305  000B04  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1306  000B06  ECB6  F005         	call	_ENVIA_NIBBLE
  1307  000B0A  0012               	return		;funcret
  1308  000B0C                     __end_of_ENVIA_LCD_CMD:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _LEER_LCD *****************
  1312 ;; Defined at:
  1313 ;;		line 144 in file "LCD.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  aux             1    0[COMRAM] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0
  1328 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        1 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_ENVIA_CHAR
  1337 ;;		_ENVIA_LCD_CMD
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text13
  1342  000830                     __ptext13:
  1343                           	callstack 0
  1344  000830                     _LEER_LCD:
  1345                           	callstack 27
  1346  000830                     
  1347                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1348  000830  0EF8               	movlw	248
  1349  000832  6E95               	movwf	149,c	;volatile
  1350  000834                     
  1351                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  1352  000834  908D               	bcf	141,0,c	;volatile
  1353  000836                     
  1354                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  1355  000836  828D               	bsf	141,1,c	;volatile
  1356  000838                     
  1357                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  1358  000838  848D               	bsf	141,2,c	;volatile
  1359  00083A                     
  1360                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1361  00083A  0E21               	movlw	33
  1362  00083C                     u297:
  1363  00083C  2EE8               	decfsz	wreg,f,c
  1364  00083E  D7FE               	bra	u297
  1365  000840  F000               	nop	
  1366  000842                     
  1367                           ;LCD.c: 152:  aux = PORTD;
  1368  000842  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1369  000846                     
  1370                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  1371  000846  948D               	bcf	141,2,c	;volatile
  1372  000848                     
  1373                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1374  000848  0E21               	movlw	33
  1375  00084A                     u307:
  1376  00084A  2EE8               	decfsz	wreg,f,c
  1377  00084C  D7FE               	bra	u307
  1378  00084E  F000               	nop	
  1379  000850                     
  1380                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  1381  000850  848D               	bsf	141,2,c	;volatile
  1382  000852                     
  1383                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1384  000852  0E21               	movlw	33
  1385  000854                     u317:
  1386  000854  2EE8               	decfsz	wreg,f,c
  1387  000856  D7FE               	bra	u317
  1388  000858  F000               	nop	
  1389  00085A                     
  1390                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  1391  00085A  948D               	bcf	141,2,c	;volatile
  1392  00085C                     l870:
  1393                           
  1394                           ;LCD.c: 158:  aux = aux & 0x80;
  1395  00085C  5001               	movf	LEER_LCD@aux^0,w,c
  1396  00085E  0B80               	andlw	128
  1397  000860  6E01               	movwf	LEER_LCD@aux^0,c
  1398                           
  1399                           ;LCD.c: 159:  while(aux == 0x80)
  1400  000862  EF47  F004         	goto	l884
  1401  000866                     l156:
  1402                           
  1403                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  1404  000866  848D               	bsf	141,2,c	;volatile
  1405  000868                     
  1406                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1407  000868  0E21               	movlw	33
  1408  00086A                     u327:
  1409  00086A  2EE8               	decfsz	wreg,f,c
  1410  00086C  D7FE               	bra	u327
  1411  00086E  F000               	nop	
  1412  000870                     
  1413                           ;LCD.c: 163:             aux = PORTD;
  1414  000870  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1415  000874                     
  1416                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  1417  000874  948D               	bcf	141,2,c	;volatile
  1418                           
  1419                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1420  000876  0E21               	movlw	33
  1421  000878                     u337:
  1422  000878  2EE8               	decfsz	wreg,f,c
  1423  00087A  D7FE               	bra	u337
  1424  00087C  F000               	nop	
  1425  00087E                     
  1426                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  1427  00087E  848D               	bsf	141,2,c	;volatile
  1428                           
  1429                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1430  000880  0E21               	movlw	33
  1431  000882                     u347:
  1432  000882  2EE8               	decfsz	wreg,f,c
  1433  000884  D7FE               	bra	u347
  1434  000886  F000               	nop	
  1435  000888                     
  1436                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  1437  000888  948D               	bcf	141,2,c	;volatile
  1438  00088A  EF2E  F004         	goto	l870
  1439  00088E                     l884:
  1440                           
  1441                           ;LCD.c: 159:  while(aux == 0x80)
  1442  00088E  0E80               	movlw	128
  1443  000890  1801               	xorwf	LEER_LCD@aux^0,w,c
  1444  000892  B4D8               	btfsc	status,2,c
  1445  000894  EF4E  F004         	goto	u11
  1446  000898  EF50  F004         	goto	u10
  1447  00089C                     u11:
  1448  00089C  EF33  F004         	goto	l156
  1449  0008A0                     u10:
  1450  0008A0  0012               	return		;funcret
  1451  0008A2                     __end_of_LEER_LCD:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _ENVIA_NIBBLE *****************
  1455 ;; Defined at:
  1456 ;;		line 118 in file "LCD.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  dato            1    wreg     unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  dato            1    0[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_ENVIA_CHAR
  1480 ;;		_LCD_CONFIG
  1481 ;;		_ENVIA_LCD_CMD
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text14
  1486  000B6C                     __ptext14:
  1487                           	callstack 0
  1488  000B6C                     _ENVIA_NIBBLE:
  1489                           	callstack 27
  1490                           
  1491                           ;incstack = 0
  1492                           ;ENVIA_NIBBLE@dato stored from wreg
  1493  000B6C  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1494  000B6E                     
  1495                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1496  000B6E  0E0F               	movlw	15
  1497  000B70  168C               	andwf	140,f,c	;volatile
  1498                           
  1499                           ;LCD.c: 121:  dato &= 0xF0;
  1500  000B72  0EF0               	movlw	240
  1501  000B74  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1502                           
  1503                           ;LCD.c: 122:  LATD|= dato;
  1504  000B76  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1505  000B78  128C               	iorwf	140,f,c	;volatile
  1506  000B7A                     
  1507                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  1508  000B7A  848D               	bsf	141,2,c	;volatile
  1509  000B7C                     
  1510                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1511  000B7C  0E21               	movlw	33
  1512  000B7E                     u357:
  1513  000B7E  2EE8               	decfsz	wreg,f,c
  1514  000B80  D7FE               	bra	u357
  1515  000B82  F000               	nop	
  1516  000B84                     
  1517                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  1518  000B84  948D               	bcf	141,2,c	;volatile
  1519  000B86  0012               	return		;funcret
  1520  000B88                     __end_of_ENVIA_NIBBLE:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _EUSART_Datasend *****************
  1524 ;; Defined at:
  1525 ;;		line 58 in file "main.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  dato            1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  dato            1    0[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        1 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text15
  1553  000B88                     __ptext15:
  1554                           	callstack 0
  1555  000B88                     _EUSART_Datasend:
  1556                           	callstack 30
  1557                           
  1558                           ;incstack = 0
  1559                           ;EUSART_Datasend@dato stored from wreg
  1560  000B88  6E01               	movwf	EUSART_Datasend@dato^0,c
  1561  000B8A                     
  1562                           ;main.c: 59:     TXREG1 = dato;
  1563  000B8A  C001  FFAD         	movff	EUSART_Datasend@dato,4013	;volatile
  1564  000B8E                     l57:
  1565  000B8E  A2AC               	btfss	172,1,c	;volatile
  1566  000B90  EFCC  F005         	goto	u81
  1567  000B94  EFCE  F005         	goto	u80
  1568  000B98                     u81:
  1569  000B98  EFC7  F005         	goto	l57
  1570  000B9C                     u80:
  1571  000B9C  0012               	return		;funcret
  1572  000B9E                     __end_of_EUSART_Datasend:
  1573                           	callstack 0
  1574                           
  1575                           	psect	rparam
  1576  0000                     
  1577                           	psect	idloc
  1578                           
  1579                           ;Config register IDLOC0 @ 0x200000
  1580                           ;	unspecified, using default values
  1581  200000                     	org	2097152
  1582  200000  FF                 	db	255
  1583                           
  1584                           ;Config register IDLOC1 @ 0x200001
  1585                           ;	unspecified, using default values
  1586  200001                     	org	2097153
  1587  200001  FF                 	db	255
  1588                           
  1589                           ;Config register IDLOC2 @ 0x200002
  1590                           ;	unspecified, using default values
  1591  200002                     	org	2097154
  1592  200002  FF                 	db	255
  1593                           
  1594                           ;Config register IDLOC3 @ 0x200003
  1595                           ;	unspecified, using default values
  1596  200003                     	org	2097155
  1597  200003  FF                 	db	255
  1598                           
  1599                           ;Config register IDLOC4 @ 0x200004
  1600                           ;	unspecified, using default values
  1601  200004                     	org	2097156
  1602  200004  FF                 	db	255
  1603                           
  1604                           ;Config register IDLOC5 @ 0x200005
  1605                           ;	unspecified, using default values
  1606  200005                     	org	2097157
  1607  200005  FF                 	db	255
  1608                           
  1609                           ;Config register IDLOC6 @ 0x200006
  1610                           ;	unspecified, using default values
  1611  200006                     	org	2097158
  1612  200006  FF                 	db	255
  1613                           
  1614                           ;Config register IDLOC7 @ 0x200007
  1615                           ;	unspecified, using default values
  1616  200007                     	org	2097159
  1617  200007  FF                 	db	255
  1618                           
  1619                           	psect	config
  1620                           
  1621                           ;Config register CONFIG1L @ 0x300000
  1622                           ;	PLL Selection
  1623                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1624                           ;	PLL Enable Configuration bit
  1625                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1626                           ;	CPU System Clock Postscaler
  1627                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1628                           ;	Low Speed USB mode with 48 MHz system clock
  1629                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1630  300000                     	org	3145728
  1631  300000  00                 	db	0
  1632                           
  1633                           ;Config register CONFIG1H @ 0x300001
  1634                           ;	Oscillator Selection
  1635                           ;	FOSC = INTOSCIO, Internal oscillator
  1636                           ;	Primary Oscillator Shutdown
  1637                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1638                           ;	Fail-Safe Clock Monitor
  1639                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1640                           ;	Internal/External Oscillator Switchover
  1641                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1642  300001                     	org	3145729
  1643  300001  08                 	db	8
  1644                           
  1645                           ;Config register CONFIG2L @ 0x300002
  1646                           ;	Power-up Timer Enable
  1647                           ;	nPWRTEN = ON, Power up timer enabled
  1648                           ;	Brown-out Reset Enable
  1649                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  1650                           ;	Brown-out Reset Voltage
  1651                           ;	BORV = 190, BOR set to 1.9V nominal
  1652                           ;	Low-Power Brown-out Reset
  1653                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1654  300002                     	org	3145730
  1655  300002  58                 	db	88
  1656                           
  1657                           ;Config register CONFIG2H @ 0x300003
  1658                           ;	Watchdog Timer Enable bits
  1659                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1660                           ;	Watchdog Timer Postscaler
  1661                           ;	WDTPS = 32768, 1:32768
  1662  300003                     	org	3145731
  1663  300003  3C                 	db	60
  1664                           
  1665                           ; Padding undefined space
  1666  300004                     	org	3145732
  1667  300004  FF                 	db	255
  1668                           
  1669                           ;Config register CONFIG3H @ 0x300005
  1670                           ;	CCP2 MUX bit
  1671                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1672                           ;	PORTB A/D Enable bit
  1673                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1674                           ;	Timer3 Clock Input MUX bit
  1675                           ;	T3CMX = RC0, T3CKI function is on RC0
  1676                           ;	SDO Output MUX bit
  1677                           ;	SDOMX = RB3, SDO function is on RB3
  1678                           ;	Master Clear Reset Pin Enable
  1679                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1680  300005                     	org	3145733
  1681  300005  D1                 	db	209
  1682                           
  1683                           ;Config register CONFIG4L @ 0x300006
  1684                           ;	Stack Full/Underflow Reset
  1685                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1686                           ;	Single-Supply ICSP Enable bit
  1687                           ;	LVP = OFF, Single-Supply ICSP disabled
  1688                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1689                           ;	ICPRT = OFF, ICPORT disabled
  1690                           ;	Extended Instruction Set Enable bit
  1691                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1692                           ;	Background Debugger Enable bit
  1693                           ;	DEBUG = 0x1, unprogrammed default
  1694  300006                     	org	3145734
  1695  300006  81                 	db	129
  1696                           
  1697                           ; Padding undefined space
  1698  300007                     	org	3145735
  1699  300007  FF                 	db	255
  1700                           
  1701                           ;Config register CONFIG5L @ 0x300008
  1702                           ;	Block 0 Code Protect
  1703                           ;	CP0 = OFF, Block 0 is not code-protected
  1704                           ;	Block 1 Code Protect
  1705                           ;	CP1 = OFF, Block 1 is not code-protected
  1706                           ;	Block 2 Code Protect
  1707                           ;	CP2 = OFF, Block 2 is not code-protected
  1708                           ;	Block 3 Code Protect
  1709                           ;	CP3 = OFF, Block 3 is not code-protected
  1710  300008                     	org	3145736
  1711  300008  0F                 	db	15
  1712                           
  1713                           ;Config register CONFIG5H @ 0x300009
  1714                           ;	Boot Block Code Protect
  1715                           ;	CPB = OFF, Boot block is not code-protected
  1716                           ;	Data EEPROM Code Protect
  1717                           ;	CPD = OFF, Data EEPROM is not code-protected
  1718  300009                     	org	3145737
  1719  300009  C0                 	db	192
  1720                           
  1721                           ;Config register CONFIG6L @ 0x30000A
  1722                           ;	Block 0 Write Protect
  1723                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1724                           ;	Block 1 Write Protect
  1725                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1726                           ;	Block 2 Write Protect
  1727                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1728                           ;	Block 3 Write Protect
  1729                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1730  30000A                     	org	3145738
  1731  30000A  0F                 	db	15
  1732                           
  1733                           ;Config register CONFIG6H @ 0x30000B
  1734                           ;	Configuration Registers Write Protect
  1735                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1736                           ;	Boot Block Write Protect
  1737                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1738                           ;	Data EEPROM Write Protect
  1739                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1740  30000B                     	org	3145739
  1741  30000B  E0                 	db	224
  1742                           
  1743                           ;Config register CONFIG7L @ 0x30000C
  1744                           ;	Block 0 Table Read Protect
  1745                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1746                           ;	Block 1 Table Read Protect
  1747                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1748                           ;	Block 2 Table Read Protect
  1749                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1750                           ;	Block 3 Table Read Protect
  1751                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1752  30000C                     	org	3145740
  1753  30000C  0F                 	db	15
  1754                           
  1755                           ;Config register CONFIG7H @ 0x30000D
  1756                           ;	Boot Block Table Read Protect
  1757                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1758  30000D                     	org	3145741
  1759  30000D  40                 	db	64
  1760                           tosu	equ	0xFFF
  1761                           tosh	equ	0xFFE
  1762                           tosl	equ	0xFFD
  1763                           stkptr	equ	0xFFC
  1764                           pclatu	equ	0xFFB
  1765                           pclath	equ	0xFFA
  1766                           pcl	equ	0xFF9
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           prodh	equ	0xFF4
  1772                           prodl	equ	0xFF3
  1773                           indf0	equ	0xFEF
  1774                           postinc0	equ	0xFEE
  1775                           postdec0	equ	0xFED
  1776                           preinc0	equ	0xFEC
  1777                           plusw0	equ	0xFEB
  1778                           fsr0h	equ	0xFEA
  1779                           fsr0l	equ	0xFE9
  1780                           wreg	equ	0xFE8
  1781                           indf1	equ	0xFE7
  1782                           postinc1	equ	0xFE6
  1783                           postdec1	equ	0xFE5
  1784                           preinc1	equ	0xFE4
  1785                           plusw1	equ	0xFE3
  1786                           fsr1h	equ	0xFE2
  1787                           fsr1l	equ	0xFE1
  1788                           bsr	equ	0xFE0
  1789                           indf2	equ	0xFDF
  1790                           postinc2	equ	0xFDE
  1791                           postdec2	equ	0xFDD
  1792                           preinc2	equ	0xFDC
  1793                           plusw2	equ	0xFDB
  1794                           fsr2h	equ	0xFDA
  1795                           fsr2l	equ	0xFD9
  1796                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[16]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_pantallazo_inicial
    _pantallazo_inicial->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2908
                                             12 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                    _EUSART_Datasend
                         _POS_CURSOR
                          _configuro
                 _pantallazo_inicial
 ---------------------------------------------------------------------------------
 (1) _pantallazo_inicial                                   2     2      0    1184
                                             10 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     436
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     628
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Datasend                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _EUSART_Datasend
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _pantallazo_inicial
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
     _POS_CURSOR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          E      0       0      20        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhh        22      0       0      22        0.0%
BITBIGSFRlhlh        1      0       0      23        0.0%
BITBIGSFRlhll       14      0       0      24        0.0%
BITBIGSFRllhhh       4      0       0      25        0.0%
BITBIGSFRllhhl       6      0       0      26        0.0%
BITBIGSFRllhlhh      1      0       0      27        0.0%
BITBIGSFRllhlhl      1      0       0      28        0.0%
BITBIGSFRllhll      21      0       0      29        0.0%
BITBIGSFRlll         8      0       0      30        0.0%
ABS                  0      0       0      31        0.0%
BIGRAM             7FF      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 15 17:28:39 2023

                        l51 0A2E                          l60 0B9C                          l54 09EA  
                        l57 0B8E                          l95 0A68                          u10 08A0  
                        u11 089C                          u20 0B4E                          u21 0B4A  
                        u30 0B64                          u31 0B60                          u80 0B9C  
                        u81 0B98               ENVIA_CHAR@aux 0003                         l108 0BB2  
                       l140 0AD6                         l125 0B6A                         l143 0BBA  
                       l152 0B0A                         l137 09A2                         l146 0958  
                       l156 0866                         l149 0B86                         l158 08A0  
                       l166 0B3A                         l900 0AE4                         l910 0AF8  
                       l902 0AEC                         l912 0AFE                         l904 0AEE  
                       l920 0B3E                         l850 0834                         l914 0B04  
                       l906 0AF0                         l922 0B4E                         l930 0AA8  
                       l860 0846                         l852 0836                         l908 0AF2  
                       l916 0BB4                         l924 0B54                         l940 0ABC  
                       l932 0AAC                         l870 085C                         l862 0848  
                       l854 0838                         l918 0BAC                         l926 0B64  
                       l942 0ABE                         l934 0AB0                         l846 0AA2  
                       l880 0888                         l872 0868                         l864 0850  
                       l856 083A                         l848 0830                         l960 0908  
                       l944 0AC4                         l936 0AB8                         l928 0AA6  
                       l890 0B7C                         l874 0870                         l866 0852  
                       l858 0842                         l970 0934                         l962 090C  
                       l946 0ACA                         l938 0ABA                         l892 0B84  
                       l876 0874                         l884 088E                         l868 085A  
                       l980 0952                         l972 093A                         l964 0912  
                       l948 0AD0                         l886 0B6E                         l878 087E  
                       l894 0ADA                         l974 0940                         l966 0920  
                       l982 0B0C                         l888 0B7A                         l896 0ADC  
                       l976 0946                         l968 092E                         l984 0B1A  
                       l898 0AE0                         l978 094C                         l986 0B1E  
                       u200 08B8                         u201 08B4                         u160 0A96  
                       u161 0A92                         u217 08F0                         u170 0A42  
                       u307 084A                         u171 0A3E                         u227 09DA  
                       u180 0A60                         u317 0854                         u237 0AB2  
                       u181 0A5C                         u190 09A2                         u327 086A  
                       u247 0B12                         u191 099E                         u337 0878  
                       u257 0B24                         u347 0882                         u267 0918  
                       u357 0B7E                         u277 0928                         u287 0AE6  
                       u297 083C                 LEER_LCD@aux 0001                         wreg 000FE8  
              ?_CURSOR_HOME 0001              ??_ENVIA_NIBBLE 0001              ENVIA_CHAR@dato 0002  
                      l1010 09F0                        l1020 09FC                        l1012 09F2  
                      l1030 0A06                        l1022 09FE                        l1014 09F6  
                      l1040 0A28                        l1032 0A08                        l1024 0A00  
                      l1016 09F8                        l1008 09EC                        l1042 0A2A  
                      l1034 0A0A                        l1026 0A02                        l1018 09FA  
                      l1130 0A7A                        l1036 0A24                        l1028 0A04  
                      l1132 0A96                        l1140 0A4E                        l1054 0B8A  
                      l1038 0A26                        l1126 0A6A                        l1150 0972  
                      l1142 0A60                        l1128 0A76                        l1152 098E  
                      l1144 095A                        l1136 0A32                        l1160 09BA  
                      l1154 0990                        l1146 096A                        l1138 0A42  
                      l1162 09D0                        l1170 08AA                        l1148 096A  
                      l1164 09E6                        l1156 09A4                        l1180 08DA  
                      l1172 08B8                        l1158 09AE                        l1182 08E0  
                      l1174 08C2                        l1166 08A2                        l1184 08E6  
                      l1176 08CE                        l1168 08A6                        l1186 08FC  
                      l1178 08D4                        STR_1 0801                        STR_2 0811  
                      STR_3 0820                        _LATD 000F8C                        _main 08A2  
                      start 0000               ?_CURSOR_ONOFF 0001                ___param_bank 000000  
           ??_ENVIA_LCD_CMD 0002            __end_of_LCD_INIT 0B3C            __end_of_LEER_LCD 08A2  
                     ?_main 0001                       _PORTD 000F83                       _TRISD 000F95  
                     _TRISE 000F96           ??_EUSART_Datasend 0001                 ?_POS_CURSOR 0004  
                     tablat 000FF5          _pantallazo_inicial 09A4                       status 000FD8  
            ??_CURSOR_ONOFF 0004         ?_pantallazo_inicial 0001             __initialization 0B9E  
              __end_of_main 0908                      ??_main 000D               __activetblptr 000001  
      ??_pantallazo_inicial 000B                      _ANSELD 000F5E                      _ANSELE 000F5F  
                    _OSCCON 000FD3                      _SPBRG1 000FAF                      _TXREG1 000FAD  
      __end_of_ENVIA_NIBBLE 0B88                      isa$std 000001                      _strlen 0A6A  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                ??_BORRAR_LCD 0004         EUSART_Datasend@dato 0001  
                 ?_LCD_INIT 0001                   ?_LEER_LCD 0001                  __accesstop 0060  
   __end_of__initialization 0B9E                ??_LCD_CONFIG 0004               ___rparam_used 000001  
              ??_ENVIA_CHAR 0002              __pcstackCOMRAM 0001          __end_of_BORRAR_LCD 0BBC  
          _ESCRIBE_MENSAJE2 095A            ENVIA_LCD_CMD@aux 0003        __end_of_CURSOR_ONOFF 0B6C  
        __end_of_LCD_CONFIG 095A          __end_of_ENVIA_CHAR 0AD8                  ??_LCD_INIT 0005  
                ??_LEER_LCD 0001            ENVIA_NIBBLE@dato 0001             _EUSART_Datasend 0B88  
                   ?_strlen 0001                     _SPBRGH1 000FB0                ??_POS_CURSOR 0005  
                   __Hparam 0000                     __Lparam 0000           __end_of_configuro 0A30  
              __psmallconst 0800       __end_of_ENVIA_LCD_CMD 0B0C                     __pcinit 0B9E  
        __end_of_POS_CURSOR 0A6A                     __ramtop 0800                     __ptext0 08A2  
                   __ptext1 09A4                     __ptext2 0A30                     __ptext3 095A  
                   __ptext4 0A6A                     __ptext5 0AA4                     __ptext6 09EC  
                   __ptext7 0B0C                     __ptext8 0908                     __ptext9 0B3C  
              _ENVIA_NIBBLE 0B6C        end_of_initialization 0B9E     __end_of_EUSART_Datasend 0B9E  
                 _RCSTAbits 000FAB                     strlen@a 0003                     strlen@s 0001  
                 _PORTBbits 000F81           ESCRIBE_MENSAJE2@i 000A                   _TRISAbits 000F92  
                 _TRISBbits 000F93                   _TRISCbits 000F94                   _TXSTAbits 000FAC  
  __end_of_ESCRIBE_MENSAJE2 09A4                _CURSOR_ONOFF 0B3C          CURSOR_ONOFF@estado 0004  
            __end_of_strlen 0AA4               ??_CURSOR_HOME 0004         start_initialization 0B9E  
         ENVIA_LCD_CMD@dato 0002            ?_EUSART_Datasend 0001                    ??_strlen 0003  
       __end_of_CURSOR_HOME 0BB4                   _configuro 09EC                 __smallconst 0800  
                  _LCD_INIT 0B0C                    _LEER_LCD 0830                    _LATEbits 000F8D  
            POS_CURSOR@fila 0005                  ?_configuro 0001      ESCRIBE_MENSAJE2@cadena 0005  
                  _WPUBbits 000F85                 _CURSOR_HOME 0BAC                 _INTCON2bits 000FF1  
                  __Hrparam 0000           ?_ESCRIBE_MENSAJE2 0005                    __Lrparam 0000  
              __Lsmallconst 0800          ??_ESCRIBE_MENSAJE2 0007                  _ANSELAbits 000F5B  
                _ANSELBbits 000F5C                  _ANSELCbits 000F5D  __end_of_pantallazo_inicial 09EC  
                  __ptext10 0BAC                    __ptext11 0BB4                    __ptext12 0AD8  
                  __ptext13 0830                    __ptext14 0B6C                    __ptext15 0B88  
                _BORRAR_LCD 0BB4                  _LCD_CONFIG 0908                  _ENVIA_CHAR 0AA4  
                  isa$xinst 000000               _ENVIA_LCD_CMD 0AD8                 ??_configuro 0006  
            ?_ENVIA_LCD_CMD 0001         ESCRIBE_MENSAJE2@tam 0009                 ?_BORRAR_LCD 0001  
             ?_ENVIA_NIBBLE 0001                  _POS_CURSOR 0A30                 ?_LCD_CONFIG 0001  
               ?_ENVIA_CHAR 0001           POS_CURSOR@columna 0004  
