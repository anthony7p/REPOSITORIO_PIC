

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 08 03:01:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 06/04/2022 GMT
    27                           ; 
    28                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F45K50 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _LATD	set	3980
    61   000000                     _ANSELD	set	3934
    62   000000                     _TRISD	set	3989
    63   000000                     _OSCCON	set	4051
    64   000000                     _PORTD	set	3971
    65   000000                     _LATDbits	set	3980
    66                           
    67                           	psect	smallconst
    68   000800                     __psmallconst:
    69                           	callstack 0
    70   000800  00                 	db	0
    71   000801                     STR_1:
    72   000801  48                 	db	72	;'H'
    73   000802  4F                 	db	79	;'O'
    74   000803  4C                 	db	76	;'L'
    75   000804  41                 	db	65	;'A'
    76   000805  20                 	db	32
    77   000806  4D                 	db	77	;'M'
    78   000807  55                 	db	85	;'U'
    79   000808  4E                 	db	78	;'N'
    80   000809  44                 	db	68	;'D'
    81   00080A  4F                 	db	79	;'O'
    82   00080B  20                 	db	32
    83   00080C  50                 	db	80	;'P'
    84   00080D  45                 	db	69	;'E'
    85   00080E  52                 	db	82	;'R'
    86   00080F  46                 	db	70	;'F'
    87   000810  45                 	db	69	;'E'
    88   000811  43                 	db	67	;'C'
    89   000812  54                 	db	84	;'T'
    90   000813  4F                 	db	79	;'O'
    91   000814  00                 	db	0
    92   000815  00                 	db	0	; dummy byte at the end
    93   000000                     
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97   000AFC                     __pcinit:
    98                           	callstack 0
    99   000AFC                     start_initialization:
   100                           	callstack 0
   101   000AFC                     __initialization:
   102                           	callstack 0
   103   000AFC                     end_of_initialization:
   104                           	callstack 0
   105   000AFC                     __end_of__initialization:
   106                           	callstack 0
   107   000AFC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   108   000AFE  6EF8               	movwf	tblptru,c
   109   000B00  0E08               	movlw	high __Lsmallconst
   110   000B02  6EF7               	movwf	tblptrh,c
   111   000B04  0100               	movlb	0
   112   000B06  EF0B  F004         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	cstackCOMRAM
   115   000001                     __pcstackCOMRAM:
   116                           	callstack 0
   117   000001                     ?_strlen:
   118                           	callstack 0
   119   000001                     ENVIA_NIBBLE@dato:
   120                           	callstack 0
   121   000001                     LEER_LCD@aux:
   122                           	callstack 0
   123   000001                     strlen@s:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     ENVIA_CHAR@dato:
   129                           	callstack 0
   130   000002                     ENVIA_LCD_CMD@dato:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x1
   134   000002                     	ds	1
   135   000003                     ENVIA_CHAR@aux:
   136                           	callstack 0
   137   000003                     ENVIA_LCD_CMD@aux:
   138                           	callstack 0
   139   000003                     strlen@a:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143   000003                     	ds	1
   144   000004                     ??_LCD_CONFIG:
   145   000004                     CURSOR_ONOFF@estado:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x3
   149   000004                     	ds	1
   150   000005                     ??_LCD_INIT:
   151   000005                     ESCRIBE_MENSAJE2@cadena:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x4
   155   000005                     	ds	2
   156   000007                     ??_ESCRIBE_MENSAJE2:
   157                           
   158                           ; 1 bytes @ 0x6
   159   000007                     	ds	2
   160   000009                     ESCRIBE_MENSAJE2@tam:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x8
   164   000009                     	ds	1
   165   00000A                     ESCRIBE_MENSAJE2@i:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x9
   169   00000A                     	ds	1
   170   00000B                     ??_main:
   171                           
   172                           ; 1 bytes @ 0xA
   173   00000B                     	ds	2
   174                           
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 14 in file "manejoLCD.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   189 ;; Tracked objects:
   190 ;;		On entry : 0/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   194 ;;      Params:         0       0       0       0       0       0       0       0       0
   195 ;;      Locals:         0       0       0       0       0       0       0       0       0
   196 ;;      Temps:          2       0       0       0       0       0       0       0       0
   197 ;;      Totals:         2       0       0       0       0       0       0       0       0
   198 ;;Total ram usage:        2 bytes
   199 ;; Hardware stack levels required when called: 4
   200 ;; This function calls:
   201 ;;		_DISPLAY_SHIFTLEFT
   202 ;;		_ESCRIBE_MENSAJE2
   203 ;;		_LCD_INIT
   204 ;; This function is called by:
   205 ;;		Startup code after reset
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           	psect	text0
   210   000816                     __ptext0:
   211                           	callstack 0
   212   000816                     _main:
   213                           	callstack 27
   214   000816                     
   215                           ;manejoLCD.c: 15:     OSCCON = 0X52;
   216   000816  0E52               	movlw	82
   217   000818  6ED3               	movwf	211,c	;volatile
   218                           
   219                           ;manejoLCD.c: 16:     TRISD = 0X00;
   220   00081A  0E00               	movlw	0
   221   00081C  6E95               	movwf	149,c	;volatile
   222                           
   223                           ;manejoLCD.c: 17:     ANSELD = 0X00;
   224   00081E  0E00               	movlw	0
   225   000820  010F               	movlb	15	; () banked
   226   000822  6F5E               	movwf	94,b	;volatile
   227   000824                     
   228                           ; BSR set to: 15
   229                           ;manejoLCD.c: 19:     LCD_INIT();
   230   000824  EC40  F005         	call	_LCD_INIT	;wreg free
   231   000828                     
   232                           ;manejoLCD.c: 20:     ESCRIBE_MENSAJE2("HOLA MUNDO PERFECTO");
   233   000828  0E01               	movlw	low STR_1
   234   00082A  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   235   00082C  0E08               	movlw	high STR_1
   236   00082E  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   237   000830  ECCA  F004         	call	_ESCRIBE_MENSAJE2	;wreg free
   238   000834                     
   239                           ;manejoLCD.c: 24:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   240   000834  0E06               	movlw	6
   241   000836  6E0C               	movwf	(??_main+1)^0,c
   242   000838  0E13               	movlw	19
   243   00083A  6E0B               	movwf	??_main^0,c
   244   00083C  0EAE               	movlw	174
   245   00083E                     u167:
   246   00083E  2EE8               	decfsz	wreg,f,c
   247   000840  D7FE               	bra	u167
   248   000842  2E0B               	decfsz	??_main^0,f,c
   249   000844  D7FC               	bra	u167
   250   000846  2E0C               	decfsz	(??_main+1)^0,f,c
   251   000848  D7FA               	bra	u167
   252   00084A                     
   253                           ;manejoLCD.c: 25:     DISPLAY_SHIFTLEFT();
   254   00084A  EC8D  F005         	call	_DISPLAY_SHIFTLEFT	;wreg free
   255   00084E                     
   256                           ;manejoLCD.c: 26:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   257   00084E  0E06               	movlw	6
   258   000850  6E0C               	movwf	(??_main+1)^0,c
   259   000852  0E13               	movlw	19
   260   000854  6E0B               	movwf	??_main^0,c
   261   000856  0EAE               	movlw	174
   262   000858                     u177:
   263   000858  2EE8               	decfsz	wreg,f,c
   264   00085A  D7FE               	bra	u177
   265   00085C  2E0B               	decfsz	??_main^0,f,c
   266   00085E  D7FC               	bra	u177
   267   000860  2E0C               	decfsz	(??_main+1)^0,f,c
   268   000862  D7FA               	bra	u177
   269   000864                     
   270                           ;manejoLCD.c: 27:     DISPLAY_SHIFTLEFT();
   271   000864  EC8D  F005         	call	_DISPLAY_SHIFTLEFT	;wreg free
   272   000868                     
   273                           ;manejoLCD.c: 28:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   274   000868  0E06               	movlw	6
   275   00086A  6E0C               	movwf	(??_main+1)^0,c
   276   00086C  0E13               	movlw	19
   277   00086E  6E0B               	movwf	??_main^0,c
   278   000870  0EAE               	movlw	174
   279   000872                     u187:
   280   000872  2EE8               	decfsz	wreg,f,c
   281   000874  D7FE               	bra	u187
   282   000876  2E0B               	decfsz	??_main^0,f,c
   283   000878  D7FC               	bra	u187
   284   00087A  2E0C               	decfsz	(??_main+1)^0,f,c
   285   00087C  D7FA               	bra	u187
   286   00087E                     
   287                           ;manejoLCD.c: 29:     DISPLAY_SHIFTLEFT();
   288   00087E  EC8D  F005         	call	_DISPLAY_SHIFTLEFT	;wreg free
   289   000882                     
   290                           ;manejoLCD.c: 30:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   291   000882  0E06               	movlw	6
   292   000884  6E0C               	movwf	(??_main+1)^0,c
   293   000886  0E13               	movlw	19
   294   000888  6E0B               	movwf	??_main^0,c
   295   00088A  0EAE               	movlw	174
   296   00088C                     u197:
   297   00088C  2EE8               	decfsz	wreg,f,c
   298   00088E  D7FE               	bra	u197
   299   000890  2E0B               	decfsz	??_main^0,f,c
   300   000892  D7FC               	bra	u197
   301   000894  2E0C               	decfsz	(??_main+1)^0,f,c
   302   000896  D7FA               	bra	u197
   303   000898                     
   304                           ;manejoLCD.c: 31:     DISPLAY_SHIFTLEFT();
   305   000898  EC8D  F005         	call	_DISPLAY_SHIFTLEFT	;wreg free
   306   00089C                     
   307                           ;manejoLCD.c: 32:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   308   00089C  0E06               	movlw	6
   309   00089E  6E0C               	movwf	(??_main+1)^0,c
   310   0008A0  0E13               	movlw	19
   311   0008A2  6E0B               	movwf	??_main^0,c
   312   0008A4  0EAE               	movlw	174
   313   0008A6                     u207:
   314   0008A6  2EE8               	decfsz	wreg,f,c
   315   0008A8  D7FE               	bra	u207
   316   0008AA  2E0B               	decfsz	??_main^0,f,c
   317   0008AC  D7FC               	bra	u207
   318   0008AE  2E0C               	decfsz	(??_main+1)^0,f,c
   319   0008B0  D7FA               	bra	u207
   320   0008B2                     
   321                           ;manejoLCD.c: 33:     DISPLAY_SHIFTLEFT();
   322   0008B2  EC8D  F005         	call	_DISPLAY_SHIFTLEFT	;wreg free
   323   0008B6                     
   324                           ;manejoLCD.c: 34:     _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   325   0008B6  0E06               	movlw	6
   326   0008B8  6E0C               	movwf	(??_main+1)^0,c
   327   0008BA  0E13               	movlw	19
   328   0008BC  6E0B               	movwf	??_main^0,c
   329   0008BE  0EAE               	movlw	174
   330   0008C0                     u217:
   331   0008C0  2EE8               	decfsz	wreg,f,c
   332   0008C2  D7FE               	bra	u217
   333   0008C4  2E0B               	decfsz	??_main^0,f,c
   334   0008C6  D7FC               	bra	u217
   335   0008C8  2E0C               	decfsz	(??_main+1)^0,f,c
   336   0008CA  D7FA               	bra	u217
   337   0008CC  EF00  F000         	goto	start
   338   0008D0                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _LCD_INIT *****************
   342 ;; Defined at:
   343 ;;		line 184 in file "LCD.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   357 ;;      Params:         0       0       0       0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0
   359 ;;      Temps:          1       0       0       0       0       0       0       0       0
   360 ;;      Totals:         1       0       0       0       0       0       0       0       0
   361 ;;Total ram usage:        1 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; Hardware stack levels required when called: 3
   364 ;; This function calls:
   365 ;;		_BORRAR_LCD
   366 ;;		_CURSOR_HOME
   367 ;;		_CURSOR_ONOFF
   368 ;;		_LCD_CONFIG
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text1
   375   000A80                     __ptext1:
   376                           	callstack 0
   377   000A80                     _LCD_INIT:
   378                           	callstack 27
   379   000A80                     
   380                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   381   000A80  0E14               	movlw	20
   382   000A82  6E05               	movwf	??_LCD_INIT^0,c
   383   000A84  0E7A               	movlw	122
   384   000A86                     u227:
   385   000A86  2EE8               	decfsz	wreg,f,c
   386   000A88  D7FE               	bra	u227
   387   000A8A  2E05               	decfsz	??_LCD_INIT^0,f,c
   388   000A8C  D7FC               	bra	u227
   389   000A8E                     
   390                           ;LCD.c: 186:     LCD_CONFIG();
   391   000A8E  ECA1  F004         	call	_LCD_CONFIG	;wreg free
   392   000A92                     
   393                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   394   000A92  0E14               	movlw	20
   395   000A94  6E05               	movwf	??_LCD_INIT^0,c
   396   000A96  0E7A               	movlw	122
   397   000A98                     u237:
   398   000A98  2EE8               	decfsz	wreg,f,c
   399   000A9A  D7FE               	bra	u237
   400   000A9C  2E05               	decfsz	??_LCD_INIT^0,f,c
   401   000A9E  D7FC               	bra	u237
   402                           
   403                           ;LCD.c: 188:     BORRAR_LCD();
   404   000AA0  EC89  F005         	call	_BORRAR_LCD	;wreg free
   405                           
   406                           ;LCD.c: 189:     CURSOR_HOME();
   407   000AA4  EC85  F005         	call	_CURSOR_HOME	;wreg free
   408                           
   409                           ;LCD.c: 190:     CURSOR_ONOFF(1);
   410   000AA8  0E01               	movlw	1
   411   000AAA  EC58  F005         	call	_CURSOR_ONOFF
   412   000AAE  0012               	return		;funcret
   413   000AB0                     __end_of_LCD_INIT:
   414                           	callstack 0
   415                           
   416 ;; *************** function _LCD_CONFIG *****************
   417 ;; Defined at:
   418 ;;		line 101 in file "LCD.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   432 ;;      Params:         0       0       0       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0       0       0
   434 ;;      Temps:          1       0       0       0       0       0       0       0       0
   435 ;;      Totals:         1       0       0       0       0       0       0       0       0
   436 ;;Total ram usage:        1 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; Hardware stack levels required when called: 2
   439 ;; This function calls:
   440 ;;		_ENVIA_LCD_CMD
   441 ;;		_ENVIA_NIBBLE
   442 ;; This function is called by:
   443 ;;		_LCD_INIT
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text2
   448   000942                     __ptext2:
   449                           	callstack 0
   450   000942                     _LCD_CONFIG:
   451                           	callstack 27
   452   000942                     
   453                           ;LCD.c: 103:  LATDbits.LATD0 = 0;
   454   000942  908C               	bcf	140,0,c	;volatile
   455                           
   456                           ;LCD.c: 104:  LATDbits.LATD1 = 0;
   457   000944  928C               	bcf	140,1,c	;volatile
   458   000946                     
   459                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
   460   000946  0E30               	movlw	48
   461   000948  EC70  F005         	call	_ENVIA_NIBBLE
   462   00094C                     
   463                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
   464   00094C  0E03               	movlw	3
   465   00094E  6E04               	movwf	??_LCD_CONFIG^0,c
   466   000950  0E98               	movlw	152
   467   000952                     u247:
   468   000952  2EE8               	decfsz	wreg,f,c
   469   000954  D7FE               	bra	u247
   470   000956  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   471   000958  D7FC               	bra	u247
   472   00095A                     
   473                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
   474   00095A  0E30               	movlw	48
   475   00095C  EC70  F005         	call	_ENVIA_NIBBLE
   476                           
   477                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   478   000960  0E21               	movlw	33
   479   000962                     u257:
   480   000962  2EE8               	decfsz	wreg,f,c
   481   000964  D7FE               	bra	u257
   482   000966  F000               	nop	
   483   000968                     
   484                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
   485   000968  0E30               	movlw	48
   486   00096A  EC70  F005         	call	_ENVIA_NIBBLE
   487   00096E                     
   488                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
   489   00096E  0E20               	movlw	32
   490   000970  EC70  F005         	call	_ENVIA_NIBBLE
   491   000974                     
   492                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
   493   000974  0E01               	movlw	1
   494   000976  EC26  F005         	call	_ENVIA_LCD_CMD
   495   00097A                     
   496                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
   497   00097A  0E28               	movlw	40
   498   00097C  EC26  F005         	call	_ENVIA_LCD_CMD
   499   000980                     
   500                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
   501   000980  0E0F               	movlw	15
   502   000982  EC26  F005         	call	_ENVIA_LCD_CMD
   503   000986                     
   504                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
   505   000986  0E06               	movlw	6
   506   000988  EC26  F005         	call	_ENVIA_LCD_CMD
   507   00098C                     
   508                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
   509   00098C  0E01               	movlw	1
   510   00098E  EC26  F005         	call	_ENVIA_LCD_CMD
   511   000992  0012               	return		;funcret
   512   000994                     __end_of_LCD_CONFIG:
   513                           	callstack 0
   514                           
   515 ;; *************** function _CURSOR_ONOFF *****************
   516 ;; Defined at:
   517 ;;		line 54 in file "LCD.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  estado          1    wreg     unsigned char 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  estado          1    3[COMRAM] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         0       0       0       0       0       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0
   534 ;;      Totals:         1       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        1 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 2
   538 ;; This function calls:
   539 ;;		_ENVIA_LCD_CMD
   540 ;; This function is called by:
   541 ;;		_LCD_INIT
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text3
   546   000AB0                     __ptext3:
   547                           	callstack 0
   548   000AB0                     _CURSOR_ONOFF:
   549                           	callstack 27
   550                           
   551                           ;incstack = 0
   552                           ;CURSOR_ONOFF@estado stored from wreg
   553   000AB0  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   554   000AB2                     
   555                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   556   000AB2  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   557   000AB4  A4D8               	btfss	status,2,c
   558   000AB6  EF5F  F005         	goto	u21
   559   000ABA  EF61  F005         	goto	u20
   560   000ABE                     u21:
   561   000ABE  EF64  F005         	goto	l872
   562   000AC2                     u20:
   563   000AC2  0E0E               	movlw	14
   564   000AC4  EC26  F005         	call	_ENVIA_LCD_CMD
   565   000AC8                     l872:
   566                           
   567                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   568   000AC8  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   569   000ACA  A4D8               	btfss	status,2,c
   570   000ACC  EF6A  F005         	goto	u31
   571   000AD0  EF6C  F005         	goto	u30
   572   000AD4                     u31:
   573   000AD4  EF6F  F005         	goto	l75
   574   000AD8                     u30:
   575   000AD8  0E0C               	movlw	12
   576   000ADA  EC26  F005         	call	_ENVIA_LCD_CMD
   577   000ADE                     l75:
   578   000ADE  0012               	return		;funcret
   579   000AE0                     __end_of_CURSOR_ONOFF:
   580                           	callstack 0
   581                           
   582 ;; *************** function _CURSOR_HOME *****************
   583 ;; Defined at:
   584 ;;		line 29 in file "LCD.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   598 ;;      Params:         0       0       0       0       0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 2
   605 ;; This function calls:
   606 ;;		_ENVIA_LCD_CMD
   607 ;; This function is called by:
   608 ;;		_LCD_INIT
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text4
   613   000B0A                     __ptext4:
   614                           	callstack 0
   615   000B0A                     _CURSOR_HOME:
   616                           	callstack 27
   617   000B0A                     
   618                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
   619   000B0A  0E02               	movlw	2
   620   000B0C  EC26  F005         	call	_ENVIA_LCD_CMD
   621   000B10  0012               	return		;funcret
   622   000B12                     __end_of_CURSOR_HOME:
   623                           	callstack 0
   624                           
   625 ;; *************** function _BORRAR_LCD *****************
   626 ;; Defined at:
   627 ;;		line 96 in file "LCD.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 2
   648 ;; This function calls:
   649 ;;		_ENVIA_LCD_CMD
   650 ;; This function is called by:
   651 ;;		_LCD_INIT
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text5
   656   000B12                     __ptext5:
   657                           	callstack 0
   658   000B12                     _BORRAR_LCD:
   659                           	callstack 27
   660   000B12                     
   661                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
   662   000B12  0E01               	movlw	1
   663   000B14  EC26  F005         	call	_ENVIA_LCD_CMD
   664   000B18  0012               	return		;funcret
   665   000B1A                     __end_of_BORRAR_LCD:
   666                           	callstack 0
   667                           
   668 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   669 ;; Defined at:
   670 ;;		line 69 in file "LCD.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   673 ;;		 -> STR_1(20), 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  i               1    9[COMRAM] unsigned char 
   676 ;;  tam             1    8[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         2       0       0       0       0       0       0       0       0
   687 ;;      Locals:         2       0       0       0       0       0       0       0       0
   688 ;;      Temps:          2       0       0       0       0       0       0       0       0
   689 ;;      Totals:         6       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        6 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 2
   693 ;; This function calls:
   694 ;;		_ENVIA_CHAR
   695 ;;		_strlen
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text6
   702   000994                     __ptext6:
   703                           	callstack 0
   704   000994                     _ESCRIBE_MENSAJE2:
   705                           	callstack 28
   706   000994                     
   707                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   708   000994  C005  F001         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   709   000998  C006  F002         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   710   00099C  ECEF  F004         	call	_strlen	;wreg free
   711   0009A0  5001               	movf	?_strlen^0,w,c
   712   0009A2  6E09               	movwf	ESCRIBE_MENSAJE2@tam^0,c
   713   0009A4                     
   714                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   715   0009A4  0E00               	movlw	0
   716   0009A6  6E0A               	movwf	ESCRIBE_MENSAJE2@i^0,c
   717   0009A8  EFE5  F004         	goto	l1054
   718   0009AC                     l1050:
   719                           
   720                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   721   0009AC  500A               	movf	ESCRIBE_MENSAJE2@i^0,w,c
   722   0009AE  2405               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
   723   0009B0  6E07               	movwf	??_ESCRIBE_MENSAJE2^0,c
   724   0009B2  0E00               	movlw	0
   725   0009B4  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
   726   0009B6  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
   727   0009B8  C007  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   728   0009BC  C008  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   729   0009C0                     	if	0	;tblptru may be non-zero
   730   0009C0                     	endif
   731   0009C0                     	if	0	;tblptru may be non-zero
   732   0009C0                     	endif
   733   0009C0  0008               	tblrd		*
   734   0009C2  50F5               	movf	tablat,w,c
   735   0009C4  EC0C  F005         	call	_ENVIA_CHAR
   736   0009C8                     
   737                           ;LCD.c: 77:  }
   738   0009C8  2A0A               	incf	ESCRIBE_MENSAJE2@i^0,f,c
   739   0009CA                     l1054:
   740   0009CA  5009               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
   741   0009CC  5C0A               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
   742   0009CE  A0D8               	btfss	status,0,c
   743   0009D0  EFEC  F004         	goto	u151
   744   0009D4  EFEE  F004         	goto	u150
   745   0009D8                     u151:
   746   0009D8  EFD6  F004         	goto	l1050
   747   0009DC                     u150:
   748   0009DC  0012               	return		;funcret
   749   0009DE                     __end_of_ESCRIBE_MENSAJE2:
   750                           	callstack 0
   751                           
   752 ;; *************** function _strlen *****************
   753 ;; Defined at:
   754 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  s               2    0[COMRAM] PTR const unsigned char 
   757 ;;		 -> STR_1(20), 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  a               2    2[COMRAM] PTR const unsigned char 
   760 ;;		 -> STR_1(20), 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  2    0[COMRAM] unsigned int 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         2       0       0       0       0       0       0       0       0
   771 ;;      Locals:         2       0       0       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0
   773 ;;      Totals:         4       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        4 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_ESCRIBE_MENSAJE2
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text7
   784   0009DE                     __ptext7:
   785                           	callstack 0
   786   0009DE                     _strlen:
   787                           	callstack 29
   788   0009DE  C001  F003         	movff	strlen@s,strlen@a
   789   0009E2  C002  F004         	movff	strlen@s+1,strlen@a+1
   790   0009E6  EFF7  F004         	goto	l1038
   791   0009EA                     l1036:
   792   0009EA  4A01               	infsnz	strlen@s^0,f,c
   793   0009EC  2A02               	incf	(strlen@s+1)^0,f,c
   794   0009EE                     l1038:
   795   0009EE  C001  FFF6         	movff	strlen@s,tblptrl
   796   0009F2  C002  FFF7         	movff	strlen@s+1,tblptrh
   797   0009F6                     	if	0	;tblptru may be non-zero
   798   0009F6                     	endif
   799   0009F6                     	if	0	;tblptru may be non-zero
   800   0009F6                     	endif
   801   0009F6  0008               	tblrd		*
   802   0009F8  50F5               	movf	tablat,w,c
   803   0009FA  0900               	iorlw	0
   804   0009FC  A4D8               	btfss	status,2,c
   805   0009FE  EF03  F005         	goto	u141
   806   000A02  EF05  F005         	goto	u140
   807   000A06                     u141:
   808   000A06  EFF5  F004         	goto	l1036
   809   000A0A                     u140:
   810   000A0A  5003               	movf	strlen@a^0,w,c
   811   000A0C  5C01               	subwf	strlen@s^0,w,c
   812   000A0E  6E01               	movwf	?_strlen^0,c
   813   000A10  5004               	movf	(strlen@a+1)^0,w,c
   814   000A12  5802               	subwfb	(strlen@s+1)^0,w,c
   815   000A14  6E02               	movwf	(?_strlen+1)^0,c
   816   000A16  0012               	return		;funcret
   817   000A18                     __end_of_strlen:
   818                           	callstack 0
   819                           
   820 ;; *************** function _ENVIA_CHAR *****************
   821 ;; Defined at:
   822 ;;		line 80 in file "LCD.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  dato            1    wreg     unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  dato            1    1[COMRAM] unsigned char 
   827 ;;  aux             1    2[COMRAM] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   837 ;;      Params:         0       0       0       0       0       0       0       0       0
   838 ;;      Locals:         2       0       0       0       0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0
   840 ;;      Totals:         2       0       0       0       0       0       0       0       0
   841 ;;Total ram usage:        2 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 1
   844 ;; This function calls:
   845 ;;		_ENVIA_NIBBLE
   846 ;;		_LEER_LCD
   847 ;; This function is called by:
   848 ;;		_ESCRIBE_MENSAJE2
   849 ;;		_ESCRIBE_MENSAJE
   850 ;;		_GENERACARACTER
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text8
   855   000A18                     __ptext8:
   856                           	callstack 0
   857   000A18                     _ENVIA_CHAR:
   858                           	callstack 28
   859                           
   860                           ;incstack = 0
   861                           ;ENVIA_CHAR@dato stored from wreg
   862   000A18  6E02               	movwf	ENVIA_CHAR@dato^0,c
   863   000A1A                     
   864                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATDbits.LATD0 = 1;
   865   000A1A  808C               	bsf	140,0,c	;volatile
   866   000A1C                     
   867                           ;LCD.c: 84:  LEER_LCD();
   868   000A1C  EC68  F004         	call	_LEER_LCD	;wreg free
   869   000A20                     
   870                           ;LCD.c: 85:  TRISD = 0x00;
   871   000A20  0E00               	movlw	0
   872   000A22  6E95               	movwf	149,c	;volatile
   873   000A24                     
   874                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   875   000A24  0E21               	movlw	33
   876   000A26                     u267:
   877   000A26  2EE8               	decfsz	wreg,f,c
   878   000A28  D7FE               	bra	u267
   879   000A2A  F000               	nop	
   880   000A2C                     
   881                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
   882   000A2C  928C               	bcf	140,1,c	;volatile
   883   000A2E                     
   884                           ;LCD.c: 88:  LATDbits.LATD2 = 0;
   885   000A2E  948C               	bcf	140,2,c	;volatile
   886   000A30                     
   887                           ;LCD.c: 89:  LATDbits.LATD0 = 1;
   888   000A30  808C               	bsf	140,0,c	;volatile
   889   000A32                     
   890                           ;LCD.c: 90:  aux = dato & 0xF0;
   891   000A32  5002               	movf	ENVIA_CHAR@dato^0,w,c
   892   000A34  0BF0               	andlw	240
   893   000A36  6E03               	movwf	ENVIA_CHAR@aux^0,c
   894   000A38                     
   895                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
   896   000A38  5003               	movf	ENVIA_CHAR@aux^0,w,c
   897   000A3A  EC70  F005         	call	_ENVIA_NIBBLE
   898   000A3E                     
   899                           ;LCD.c: 92:  aux = dato << 4;
   900   000A3E  3802               	swapf	ENVIA_CHAR@dato^0,w,c
   901   000A40  0BF0               	andlw	240
   902   000A42  6E03               	movwf	ENVIA_CHAR@aux^0,c
   903   000A44                     
   904                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
   905   000A44  5003               	movf	ENVIA_CHAR@aux^0,w,c
   906   000A46  EC70  F005         	call	_ENVIA_NIBBLE
   907   000A4A  0012               	return		;funcret
   908   000A4C                     __end_of_ENVIA_CHAR:
   909                           	callstack 0
   910                           
   911 ;; *************** function _DISPLAY_SHIFTLEFT *****************
   912 ;; Defined at:
   913 ;;		line 44 in file "LCD.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   927 ;;      Params:         0       0       0       0       0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; Hardware stack levels required when called: 2
   934 ;; This function calls:
   935 ;;		_ENVIA_LCD_CMD
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text9
   942   000B1A                     __ptext9:
   943                           	callstack 0
   944   000B1A                     _DISPLAY_SHIFTLEFT:
   945                           	callstack 28
   946   000B1A                     
   947                           ;LCD.c: 46:  ENVIA_LCD_CMD(0x18);
   948   000B1A  0E18               	movlw	24
   949   000B1C  EC26  F005         	call	_ENVIA_LCD_CMD
   950   000B20  0012               	return		;funcret
   951   000B22                     __end_of_DISPLAY_SHIFTLEFT:
   952                           	callstack 0
   953                           
   954 ;; *************** function _ENVIA_LCD_CMD *****************
   955 ;; Defined at:
   956 ;;		line 128 in file "LCD.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  dato            1    wreg     unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  dato            1    1[COMRAM] unsigned char 
   961 ;;  aux             1    2[COMRAM] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   971 ;;      Params:         0       0       0       0       0       0       0       0       0
   972 ;;      Locals:         2       0       0       0       0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0
   974 ;;      Totals:         2       0       0       0       0       0       0       0       0
   975 ;;Total ram usage:        2 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		_ENVIA_NIBBLE
   980 ;;		_LEER_LCD
   981 ;; This function is called by:
   982 ;;		_CURSOR_HOME
   983 ;;		_DISPLAY_SHIFTLEFT
   984 ;;		_CURSOR_ONOFF
   985 ;;		_BORRAR_LCD
   986 ;;		_LCD_CONFIG
   987 ;;		_POS_CURSOR
   988 ;;		_BLINK_CURSOR
   989 ;;		_DISPLAY_ONOFF
   990 ;;		_CURSOR_SHIFTLEFT
   991 ;;		_CURSOR_SHIFTRIGHT
   992 ;;		_DISPLAY_SHIFTRIGHT
   993 ;;		_GENERACARACTER
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text10
   998   000A4C                     __ptext10:
   999                           	callstack 0
  1000   000A4C                     _ENVIA_LCD_CMD:
  1001                           	callstack 27
  1002                           
  1003                           ;incstack = 0
  1004                           ;ENVIA_LCD_CMD@dato stored from wreg
  1005   000A4C  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1006   000A4E                     
  1007                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATDbits.LATD0 = 0;
  1008   000A4E  908C               	bcf	140,0,c	;volatile
  1009   000A50                     
  1010                           ;LCD.c: 132:  LEER_LCD();
  1011   000A50  EC68  F004         	call	_LEER_LCD	;wreg free
  1012   000A54                     
  1013                           ;LCD.c: 133:  TRISD = 0b00000000;
  1014   000A54  0E00               	movlw	0
  1015   000A56  6E95               	movwf	149,c	;volatile
  1016   000A58                     
  1017                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1018   000A58  0E21               	movlw	33
  1019   000A5A                     u277:
  1020   000A5A  2EE8               	decfsz	wreg,f,c
  1021   000A5C  D7FE               	bra	u277
  1022   000A5E  F000               	nop	
  1023   000A60                     
  1024                           ;LCD.c: 135:     LATDbits.LATD1 = 0;
  1025   000A60  928C               	bcf	140,1,c	;volatile
  1026   000A62                     
  1027                           ;LCD.c: 136:  LATDbits.LATD2 = 0;
  1028   000A62  948C               	bcf	140,2,c	;volatile
  1029   000A64                     
  1030                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  1031   000A64  908C               	bcf	140,0,c	;volatile
  1032   000A66                     
  1033                           ;LCD.c: 138:  aux = dato & 0xF0;
  1034   000A66  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1035   000A68  0BF0               	andlw	240
  1036   000A6A  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1037   000A6C                     
  1038                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1039   000A6C  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1040   000A6E  EC70  F005         	call	_ENVIA_NIBBLE
  1041   000A72                     
  1042                           ;LCD.c: 140:  aux = dato<<4;
  1043   000A72  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1044   000A74  0BF0               	andlw	240
  1045   000A76  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1046   000A78                     
  1047                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1048   000A78  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1049   000A7A  EC70  F005         	call	_ENVIA_NIBBLE
  1050   000A7E  0012               	return		;funcret
  1051   000A80                     __end_of_ENVIA_LCD_CMD:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _LEER_LCD *****************
  1055 ;; Defined at:
  1056 ;;		line 144 in file "LCD.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  aux             1    0[COMRAM] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0
  1071 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1073 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1074 ;;Total ram usage:        1 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_ENVIA_CHAR
  1080 ;;		_ENVIA_LCD_CMD
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text11
  1085   0008D0                     __ptext11:
  1086                           	callstack 0
  1087   0008D0                     _LEER_LCD:
  1088                           	callstack 27
  1089   0008D0                     
  1090                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1091   0008D0  0EF8               	movlw	248
  1092   0008D2  6E95               	movwf	149,c	;volatile
  1093   0008D4                     
  1094                           ;LCD.c: 148:  LATDbits.LATD0 = 0;
  1095   0008D4  908C               	bcf	140,0,c	;volatile
  1096   0008D6                     
  1097                           ;LCD.c: 149:  LATDbits.LATD1 = 1;
  1098   0008D6  828C               	bsf	140,1,c	;volatile
  1099   0008D8                     
  1100                           ;LCD.c: 150:  LATDbits.LATD2 = 1;
  1101   0008D8  848C               	bsf	140,2,c	;volatile
  1102   0008DA                     
  1103                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1104   0008DA  0E21               	movlw	33
  1105   0008DC                     u287:
  1106   0008DC  2EE8               	decfsz	wreg,f,c
  1107   0008DE  D7FE               	bra	u287
  1108   0008E0  F000               	nop	
  1109   0008E2                     
  1110                           ;LCD.c: 152:  aux = PORTD;
  1111   0008E2  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1112   0008E6                     
  1113                           ;LCD.c: 153:  LATDbits.LATD2 = 0;
  1114   0008E6  948C               	bcf	140,2,c	;volatile
  1115   0008E8                     
  1116                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1117   0008E8  0E21               	movlw	33
  1118   0008EA                     u297:
  1119   0008EA  2EE8               	decfsz	wreg,f,c
  1120   0008EC  D7FE               	bra	u297
  1121   0008EE  F000               	nop	
  1122   0008F0                     
  1123                           ;LCD.c: 155:  LATDbits.LATD2 = 1;
  1124   0008F0  848C               	bsf	140,2,c	;volatile
  1125   0008F2                     
  1126                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1127   0008F2  0E21               	movlw	33
  1128   0008F4                     u307:
  1129   0008F4  2EE8               	decfsz	wreg,f,c
  1130   0008F6  D7FE               	bra	u307
  1131   0008F8  F000               	nop	
  1132   0008FA                     
  1133                           ;LCD.c: 157:  LATDbits.LATD2 = 0;
  1134   0008FA  948C               	bcf	140,2,c	;volatile
  1135   0008FC                     l820:
  1136                           
  1137                           ;LCD.c: 158:  aux = aux & 0x80;
  1138   0008FC  5001               	movf	LEER_LCD@aux^0,w,c
  1139   0008FE  0B80               	andlw	128
  1140   000900  6E01               	movwf	LEER_LCD@aux^0,c
  1141                           
  1142                           ;LCD.c: 159:  while(aux == 0x80)
  1143   000902  EF97  F004         	goto	l834
  1144   000906                     l106:
  1145                           
  1146                           ;LCD.c: 160:         {;LCD.c: 161:             LATDbits.LATD2 = 1;
  1147   000906  848C               	bsf	140,2,c	;volatile
  1148   000908                     
  1149                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1150   000908  0E21               	movlw	33
  1151   00090A                     u317:
  1152   00090A  2EE8               	decfsz	wreg,f,c
  1153   00090C  D7FE               	bra	u317
  1154   00090E  F000               	nop	
  1155   000910                     
  1156                           ;LCD.c: 163:             aux = PORTD;
  1157   000910  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1158   000914                     
  1159                           ;LCD.c: 164:             LATDbits.LATD2 = 0;
  1160   000914  948C               	bcf	140,2,c	;volatile
  1161                           
  1162                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1163   000916  0E21               	movlw	33
  1164   000918                     u327:
  1165   000918  2EE8               	decfsz	wreg,f,c
  1166   00091A  D7FE               	bra	u327
  1167   00091C  F000               	nop	
  1168   00091E                     
  1169                           ;LCD.c: 166:             LATDbits.LATD2 = 1;
  1170   00091E  848C               	bsf	140,2,c	;volatile
  1171                           
  1172                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1173   000920  0E21               	movlw	33
  1174   000922                     u337:
  1175   000922  2EE8               	decfsz	wreg,f,c
  1176   000924  D7FE               	bra	u337
  1177   000926  F000               	nop	
  1178   000928                     
  1179                           ;LCD.c: 168:             LATDbits.LATD2 = 0;
  1180   000928  948C               	bcf	140,2,c	;volatile
  1181   00092A  EF7E  F004         	goto	l820
  1182   00092E                     l834:
  1183                           
  1184                           ;LCD.c: 159:  while(aux == 0x80)
  1185   00092E  0E80               	movlw	128
  1186   000930  1801               	xorwf	LEER_LCD@aux^0,w,c
  1187   000932  B4D8               	btfsc	status,2,c
  1188   000934  EF9E  F004         	goto	u11
  1189   000938  EFA0  F004         	goto	u10
  1190   00093C                     u11:
  1191   00093C  EF83  F004         	goto	l106
  1192   000940                     u10:
  1193   000940  0012               	return		;funcret
  1194   000942                     __end_of_LEER_LCD:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _ENVIA_NIBBLE *****************
  1198 ;; Defined at:
  1199 ;;		line 118 in file "LCD.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  dato            1    wreg     unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  dato            1    0[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        1 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_ENVIA_CHAR
  1223 ;;		_LCD_CONFIG
  1224 ;;		_ENVIA_LCD_CMD
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text12
  1229   000AE0                     __ptext12:
  1230                           	callstack 0
  1231   000AE0                     _ENVIA_NIBBLE:
  1232                           	callstack 28
  1233                           
  1234                           ;incstack = 0
  1235                           ;ENVIA_NIBBLE@dato stored from wreg
  1236   000AE0  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1237   000AE2                     
  1238                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1239   000AE2  0E0F               	movlw	15
  1240   000AE4  168C               	andwf	140,f,c	;volatile
  1241                           
  1242                           ;LCD.c: 121:  dato &= 0xF0;
  1243   000AE6  0EF0               	movlw	240
  1244   000AE8  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1245                           
  1246                           ;LCD.c: 122:  LATD|= dato;
  1247   000AEA  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1248   000AEC  128C               	iorwf	140,f,c	;volatile
  1249   000AEE                     
  1250                           ;LCD.c: 123:  LATDbits.LATD2 = 1;
  1251   000AEE  848C               	bsf	140,2,c	;volatile
  1252   000AF0                     
  1253                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1254   000AF0  0E21               	movlw	33
  1255   000AF2                     u347:
  1256   000AF2  2EE8               	decfsz	wreg,f,c
  1257   000AF4  D7FE               	bra	u347
  1258   000AF6  F000               	nop	
  1259   000AF8                     
  1260                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  1261   000AF8  948C               	bcf	140,2,c	;volatile
  1262   000AFA  0012               	return		;funcret
  1263   000AFC                     __end_of_ENVIA_NIBBLE:
  1264                           	callstack 0
  1265                           
  1266                           	psect	rparam
  1267   000000                     
  1268                           	psect	idloc
  1269                           
  1270                           ;Config register IDLOC0 @ 0x200000
  1271                           ;	unspecified, using default values
  1272   200000                     	org	2097152
  1273   200000  FF                 	db	255
  1274                           
  1275                           ;Config register IDLOC1 @ 0x200001
  1276                           ;	unspecified, using default values
  1277   200001                     	org	2097153
  1278   200001  FF                 	db	255
  1279                           
  1280                           ;Config register IDLOC2 @ 0x200002
  1281                           ;	unspecified, using default values
  1282   200002                     	org	2097154
  1283   200002  FF                 	db	255
  1284                           
  1285                           ;Config register IDLOC3 @ 0x200003
  1286                           ;	unspecified, using default values
  1287   200003                     	org	2097155
  1288   200003  FF                 	db	255
  1289                           
  1290                           ;Config register IDLOC4 @ 0x200004
  1291                           ;	unspecified, using default values
  1292   200004                     	org	2097156
  1293   200004  FF                 	db	255
  1294                           
  1295                           ;Config register IDLOC5 @ 0x200005
  1296                           ;	unspecified, using default values
  1297   200005                     	org	2097157
  1298   200005  FF                 	db	255
  1299                           
  1300                           ;Config register IDLOC6 @ 0x200006
  1301                           ;	unspecified, using default values
  1302   200006                     	org	2097158
  1303   200006  FF                 	db	255
  1304                           
  1305                           ;Config register IDLOC7 @ 0x200007
  1306                           ;	unspecified, using default values
  1307   200007                     	org	2097159
  1308   200007  FF                 	db	255
  1309                           
  1310                           	psect	config
  1311                           
  1312                           ;Config register CONFIG1L @ 0x300000
  1313                           ;	PLL Selection
  1314                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1315                           ;	PLL Enable Configuration bit
  1316                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1317                           ;	CPU System Clock Postscaler
  1318                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1319                           ;	Low Speed USB mode with 48 MHz system clock
  1320                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1321   300000                     	org	3145728
  1322   300000  00                 	db	0
  1323                           
  1324                           ;Config register CONFIG1H @ 0x300001
  1325                           ;	Oscillator Selection
  1326                           ;	FOSC = INTOSCIO, Internal oscillator
  1327                           ;	Primary Oscillator Shutdown
  1328                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1329                           ;	Fail-Safe Clock Monitor
  1330                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1331                           ;	Internal/External Oscillator Switchover
  1332                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1333   300001                     	org	3145729
  1334   300001  08                 	db	8
  1335                           
  1336                           ;Config register CONFIG2L @ 0x300002
  1337                           ;	Power-up Timer Enable
  1338                           ;	nPWRTEN = ON, Power up timer enabled
  1339                           ;	Brown-out Reset Enable
  1340                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  1341                           ;	Brown-out Reset Voltage
  1342                           ;	BORV = 190, BOR set to 1.9V nominal
  1343                           ;	Low-Power Brown-out Reset
  1344                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1345   300002                     	org	3145730
  1346   300002  58                 	db	88
  1347                           
  1348                           ;Config register CONFIG2H @ 0x300003
  1349                           ;	Watchdog Timer Enable bits
  1350                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1351                           ;	Watchdog Timer Postscaler
  1352                           ;	WDTPS = 32768, 1:32768
  1353   300003                     	org	3145731
  1354   300003  3C                 	db	60
  1355                           
  1356                           ; Padding undefined space
  1357   300004                     	org	3145732
  1358   300004  FF                 	db	255
  1359                           
  1360                           ;Config register CONFIG3H @ 0x300005
  1361                           ;	CCP2 MUX bit
  1362                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1363                           ;	PORTB A/D Enable bit
  1364                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1365                           ;	Timer3 Clock Input MUX bit
  1366                           ;	T3CMX = RC0, T3CKI function is on RC0
  1367                           ;	SDO Output MUX bit
  1368                           ;	SDOMX = RB3, SDO function is on RB3
  1369                           ;	Master Clear Reset Pin Enable
  1370                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1371   300005                     	org	3145733
  1372   300005  D1                 	db	209
  1373                           
  1374                           ;Config register CONFIG4L @ 0x300006
  1375                           ;	Stack Full/Underflow Reset
  1376                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1377                           ;	Single-Supply ICSP Enable bit
  1378                           ;	LVP = OFF, Single-Supply ICSP disabled
  1379                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1380                           ;	ICPRT = OFF, ICPORT disabled
  1381                           ;	Extended Instruction Set Enable bit
  1382                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1383                           ;	Background Debugger Enable bit
  1384                           ;	DEBUG = 0x1, unprogrammed default
  1385   300006                     	org	3145734
  1386   300006  81                 	db	129
  1387                           
  1388                           ; Padding undefined space
  1389   300007                     	org	3145735
  1390   300007  FF                 	db	255
  1391                           
  1392                           ;Config register CONFIG5L @ 0x300008
  1393                           ;	Block 0 Code Protect
  1394                           ;	CP0 = OFF, Block 0 is not code-protected
  1395                           ;	Block 1 Code Protect
  1396                           ;	CP1 = OFF, Block 1 is not code-protected
  1397                           ;	Block 2 Code Protect
  1398                           ;	CP2 = OFF, Block 2 is not code-protected
  1399                           ;	Block 3 Code Protect
  1400                           ;	CP3 = OFF, Block 3 is not code-protected
  1401   300008                     	org	3145736
  1402   300008  0F                 	db	15
  1403                           
  1404                           ;Config register CONFIG5H @ 0x300009
  1405                           ;	Boot Block Code Protect
  1406                           ;	CPB = OFF, Boot block is not code-protected
  1407                           ;	Data EEPROM Code Protect
  1408                           ;	CPD = OFF, Data EEPROM is not code-protected
  1409   300009                     	org	3145737
  1410   300009  C0                 	db	192
  1411                           
  1412                           ;Config register CONFIG6L @ 0x30000A
  1413                           ;	Block 0 Write Protect
  1414                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1415                           ;	Block 1 Write Protect
  1416                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1417                           ;	Block 2 Write Protect
  1418                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1419                           ;	Block 3 Write Protect
  1420                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1421   30000A                     	org	3145738
  1422   30000A  0F                 	db	15
  1423                           
  1424                           ;Config register CONFIG6H @ 0x30000B
  1425                           ;	Configuration Registers Write Protect
  1426                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1427                           ;	Boot Block Write Protect
  1428                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1429                           ;	Data EEPROM Write Protect
  1430                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1431   30000B                     	org	3145739
  1432   30000B  E0                 	db	224
  1433                           
  1434                           ;Config register CONFIG7L @ 0x30000C
  1435                           ;	Block 0 Table Read Protect
  1436                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1437                           ;	Block 1 Table Read Protect
  1438                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1439                           ;	Block 2 Table Read Protect
  1440                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1441                           ;	Block 3 Table Read Protect
  1442                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1443   30000C                     	org	3145740
  1444   30000C  0F                 	db	15
  1445                           
  1446                           ;Config register CONFIG7H @ 0x30000D
  1447                           ;	Boot Block Table Read Protect
  1448                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1449   30000D                     	org	3145741
  1450   30000D  40                 	db	64
  1451                           tosu	equ	0xFFF
  1452                           tosh	equ	0xFFE
  1453                           tosl	equ	0xFFD
  1454                           stkptr	equ	0xFFC
  1455                           pclatu	equ	0xFFB
  1456                           pclath	equ	0xFFA
  1457                           pcl	equ	0xFF9
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           indf0	equ	0xFEF
  1465                           postinc0	equ	0xFEE
  1466                           postdec0	equ	0xFED
  1467                           preinc0	equ	0xFEC
  1468                           plusw0	equ	0xFEB
  1469                           fsr0h	equ	0xFEA
  1470                           fsr0l	equ	0xFE9
  1471                           wreg	equ	0xFE8
  1472                           indf1	equ	0xFE7
  1473                           postinc1	equ	0xFE6
  1474                           postdec1	equ	0xFE5
  1475                           preinc1	equ	0xFE4
  1476                           plusw1	equ	0xFE3
  1477                           fsr1h	equ	0xFE2
  1478                           fsr1l	equ	0xFE1
  1479                           bsr	equ	0xFE0
  1480                           indf2	equ	0xFDF
  1481                           postinc2	equ	0xFDE
  1482                           postdec2	equ	0xFDD
  1483                           preinc2	equ	0xFDC
  1484                           plusw2	equ	0xFDB
  1485                           fsr2h	equ	0xFDA
  1486                           fsr2l	equ	0xFD9
  1487                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _DISPLAY_SHIFTLEFT->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1121
                                             10 COMRAM     2     2      0
                  _DISPLAY_SHIFTLEFT
                   _ESCRIBE_MENSAJE2
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     476
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _DISPLAY_SHIFTLEFT                                    0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DISPLAY_SHIFTLEFT
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlh         3D      0       0      21        0.0%
BITBIGSFRllhh        8      0       0      22        0.0%
BITBIGSFRllhlh       8      0       0      23        0.0%
BITBIGSFRllhll      24      0       0      24        0.0%
BITBIGSFRlll         B      0       0      25        0.0%
ABS                  0      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 08 03:01:10 2023

                       l19 08CC                         l90 0A4A                         l58 0B10  
                       l67 0B20                         l75 0ADE                         l93 0B18  
                       l87 09DC                         l96 0992                         l99 0AFA  
                       u10 0940                         u11 093C                         u20 0AC2  
                       u21 0ABE                         u30 0AD8                         u31 0AD4  
            ENVIA_CHAR@aux 0003                        l102 0A7E                        l106 0906  
                      l108 0940                        l116 0AAE                        l800 08D4  
                      l810 08E6                        l802 08D6                        l820 08FC  
                      l812 08E8                        l804 08D8                        l830 0928  
                      l822 0908                        l814 08F0                        l806 08DA  
                      l910 0942                        l840 0AF0                        l824 0910  
                      l816 08F2                        l808 08E2                        l920 096E  
                      l912 0946                        l842 0AF8                        l826 0914  
                      l834 092E                        l818 08FA                        l850 0A58  
                      l930 098C                        l922 0974                        l914 094C  
                      l836 0AE2                        l828 091E                        l860 0A6C  
                      l852 0A60                        l844 0A4E                        l908 0B12  
                      l924 097A                        l916 095A                        l932 0A80  
                      l838 0AEE                        l862 0A72                        l854 0A62  
                      l846 0A50                        l950 0B1A                        l870 0AC2  
                      l926 0980                        l918 0968                        l934 0A8E  
                      l864 0A78                        l856 0A64                        l848 0A54  
                      l880 0A20                        l872 0AC8                        l928 0986  
                      l936 0A92                        l858 0A66                        l890 0A32  
                      l882 0A24                        l866 0B0A                        l874 0AD8  
                      l892 0A38                        l884 0A2C                        l876 0A1A  
                      l796 0A16                        l868 0AB2                        l798 08D0  
                      l894 0A3E                        l886 0A2E                        l878 0A1C  
                      l896 0A44                        l888 0A30                        u140 0A0A  
                      u141 0A06                        u150 09DC                        u151 09D8  
                      u207 08A6                        u217 08C0                        u307 08F4  
                      u227 0A86                        u317 090A                        u237 0A98  
                      u327 0918                        u247 0952                        u167 083E  
                      u337 0922                        u257 0962                        u177 0858  
                      u347 0AF2                        u267 0A26                        u187 0872  
                      u277 0A5A                        u197 088C                        u287 08DC  
                      u297 08EA                LEER_LCD@aux 0001                        wreg 0FE8  
             ?_CURSOR_HOME 0001             ??_ENVIA_NIBBLE 0001             ENVIA_CHAR@dato 0002  
                     l1040 0A0A                       l1034 09DE                       l1050 09AC  
                     l1036 09EA                       l1052 09C8                       l1044 0994  
                     l1060 0828                       l1038 09EE                       l1054 09CA  
                     l1046 09A4                       l1070 0868                       l1062 0834  
                     l1048 09A4                       l1080 08B2                       l1072 087E  
                     l1064 084A                       l1056 0816                       l1082 08B6  
                     l1074 0882                       l1066 084E                       l1058 0824  
                     l1076 0898                       l1068 0864                       l1078 089C  
                     STR_1 0801                       _LATD 0F8C                       _main 0816  
                     start 0000              ?_CURSOR_ONOFF 0001               ___param_bank 0000  
          ??_ENVIA_LCD_CMD 0002           __end_of_LCD_INIT 0AB0           __end_of_LEER_LCD 0942  
                    ?_main 0001                      _PORTD 0F83                      _TRISD 0F95  
                    tablat 0FF5                      status 0FD8             ??_CURSOR_ONOFF 0004  
          __initialization 0AFC               __end_of_main 08D0                     ??_main 000B  
            __activetblptr 0001                     _ANSELD 0F5E                     _OSCCON 0FD3  
     __end_of_ENVIA_NIBBLE 0AFC                     isa$std 0001                     _strlen 09DE  
             __mediumconst 0000                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8               ??_BORRAR_LCD 0004                  ?_LCD_INIT 0001  
                ?_LEER_LCD 0001                 __accesstop 0060    __end_of__initialization 0AFC  
             ??_LCD_CONFIG 0004              ___rparam_used 0001               ??_ENVIA_CHAR 0002  
           __pcstackCOMRAM 0001         __end_of_BORRAR_LCD 0B1A           _ESCRIBE_MENSAJE2 0994  
         ENVIA_LCD_CMD@aux 0003       __end_of_CURSOR_ONOFF 0AE0         __end_of_LCD_CONFIG 0994  
       __end_of_ENVIA_CHAR 0A4C                 ??_LCD_INIT 0005                 ??_LEER_LCD 0001  
         ENVIA_NIBBLE@dato 0001                    ?_strlen 0001                    __Hparam 0000  
                  __Lparam 0000               __psmallconst 0800      __end_of_ENVIA_LCD_CMD 0A80  
                  __pcinit 0AFC                    __ramtop 0800                    __ptext0 0816  
                  __ptext1 0A80                    __ptext2 0942                    __ptext3 0AB0  
                  __ptext4 0B0A                    __ptext5 0B12                    __ptext6 0994  
                  __ptext7 09DE                    __ptext8 0A18                    __ptext9 0B1A  
             _ENVIA_NIBBLE 0AE0       end_of_initialization 0AFC                    strlen@a 0003  
                  strlen@s 0001          ESCRIBE_MENSAJE2@i 000A   __end_of_ESCRIBE_MENSAJE2 09DE  
             _CURSOR_ONOFF 0AB0         CURSOR_ONOFF@estado 0004             __end_of_strlen 0A18  
            ??_CURSOR_HOME 0004        start_initialization 0AFC          ENVIA_LCD_CMD@dato 0002  
                 ??_strlen 0003        __end_of_CURSOR_HOME 0B12          _DISPLAY_SHIFTLEFT 0B1A  
       ?_DISPLAY_SHIFTLEFT 0001                __smallconst 0800        ??_DISPLAY_SHIFTLEFT 0004  
                 _LCD_INIT 0A80                   _LEER_LCD 08D0                   _LATDbits 0F8C  
__end_of_DISPLAY_SHIFTLEFT 0B22     ESCRIBE_MENSAJE2@cadena 0005                _CURSOR_HOME 0B0A  
                 __Hrparam 0000          ?_ESCRIBE_MENSAJE2 0005                   __Lrparam 0000  
             __Lsmallconst 0800         ??_ESCRIBE_MENSAJE2 0007                   __ptext10 0A4C  
                 __ptext11 08D0                   __ptext12 0AE0                 _BORRAR_LCD 0B12  
               _LCD_CONFIG 0942                 _ENVIA_CHAR 0A18                   isa$xinst 0000  
            _ENVIA_LCD_CMD 0A4C             ?_ENVIA_LCD_CMD 0001        ESCRIBE_MENSAJE2@tam 0009  
              ?_BORRAR_LCD 0001              ?_ENVIA_NIBBLE 0001                ?_LCD_CONFIG 0001  
              ?_ENVIA_CHAR 0001  
